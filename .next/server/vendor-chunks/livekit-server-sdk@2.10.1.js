"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/livekit-server-sdk@2.10.1";
exports.ids = ["vendor-chunks/livekit-server-sdk@2.10.1"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/AccessToken.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/AccessToken.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* binding */ AccessToken),\n/* harmony export */   TokenVerifier: () => (/* binding */ TokenVerifier)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/.pnpm/jose@5.9.6/node_modules/jose/dist/node/esm/jwt/sign.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/.pnpm/jose@5.9.6/node_modules/jose/dist/node/esm/jwt/verify.js\");\n/* harmony import */ var _grants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./grants.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/grants.js\");\n\n\nconst defaultTTL = `6h`;\nclass AccessToken {\n  /**\n   * Creates a new AccessToken\n   * @param apiKey - API Key, can be set in env LIVEKIT_API_KEY\n   * @param apiSecret - Secret, can be set in env LIVEKIT_API_SECRET\n   */\n  constructor(apiKey, apiSecret, options) {\n    if (!apiKey) {\n      apiKey = process.env.LIVEKIT_API_KEY;\n    }\n    if (!apiSecret) {\n      apiSecret = process.env.LIVEKIT_API_SECRET;\n    }\n    if (!apiKey || !apiSecret) {\n      throw Error(\"api-key and api-secret must be set\");\n    } else if (typeof document !== \"undefined\") {\n      console.error(\n        \"You should not include your API secret in your web client bundle.\\n\\nYour web client should request a token from your backend server which should then use the API secret to generate a token. See https://docs.livekit.io/client/connect/\"\n      );\n    }\n    this.apiKey = apiKey;\n    this.apiSecret = apiSecret;\n    this.grants = {};\n    this.identity = options == null ? void 0 : options.identity;\n    this.ttl = (options == null ? void 0 : options.ttl) || defaultTTL;\n    if (typeof this.ttl === \"number\") {\n      this.ttl = `${this.ttl}s`;\n    }\n    if (options == null ? void 0 : options.metadata) {\n      this.metadata = options.metadata;\n    }\n    if (options == null ? void 0 : options.attributes) {\n      this.attributes = options.attributes;\n    }\n    if (options == null ? void 0 : options.name) {\n      this.name = options.name;\n    }\n  }\n  /**\n   * Adds a video grant to this token.\n   * @param grant -\n   */\n  addGrant(grant) {\n    this.grants.video = { ...this.grants.video ?? {}, ...grant };\n  }\n  /**\n   * Adds a SIP grant to this token.\n   * @param grant -\n   */\n  addSIPGrant(grant) {\n    this.grants.sip = { ...this.grants.sip ?? {}, ...grant };\n  }\n  get name() {\n    return this.grants.name;\n  }\n  set name(name) {\n    this.grants.name = name;\n  }\n  get metadata() {\n    return this.grants.metadata;\n  }\n  /**\n   * Set metadata to be passed to the Participant, used only when joining the room\n   */\n  set metadata(md) {\n    this.grants.metadata = md;\n  }\n  get attributes() {\n    return this.grants.attributes;\n  }\n  set attributes(attrs) {\n    this.grants.attributes = attrs;\n  }\n  get kind() {\n    return this.grants.kind;\n  }\n  set kind(kind) {\n    this.grants.kind = kind;\n  }\n  get sha256() {\n    return this.grants.sha256;\n  }\n  set sha256(sha) {\n    this.grants.sha256 = sha;\n  }\n  get roomPreset() {\n    return this.grants.roomPreset;\n  }\n  set roomPreset(preset) {\n    this.grants.roomPreset = preset;\n  }\n  get roomConfig() {\n    return this.grants.roomConfig;\n  }\n  set roomConfig(config) {\n    this.grants.roomConfig = config;\n  }\n  /**\n   * @returns JWT encoded token\n   */\n  async toJwt() {\n    var _a;\n    const secret = new TextEncoder().encode(this.apiSecret);\n    const jwt = new jose__WEBPACK_IMPORTED_MODULE_1__.SignJWT((0,_grants_js__WEBPACK_IMPORTED_MODULE_0__.claimsToJwtPayload)(this.grants)).setProtectedHeader({ alg: \"HS256\" }).setIssuer(this.apiKey).setExpirationTime(this.ttl).setNotBefore(0);\n    if (this.identity) {\n      jwt.setSubject(this.identity);\n    } else if ((_a = this.grants.video) == null ? void 0 : _a.roomJoin) {\n      throw Error(\"identity is required for join but not set\");\n    }\n    return jwt.sign(secret);\n  }\n}\nclass TokenVerifier {\n  constructor(apiKey, apiSecret) {\n    this.apiKey = apiKey;\n    this.apiSecret = apiSecret;\n  }\n  async verify(token) {\n    const secret = new TextEncoder().encode(this.apiSecret);\n    const { payload } = await jose__WEBPACK_IMPORTED_MODULE_2__.jwtVerify(token, secret, { issuer: this.apiKey });\n    if (!payload) {\n      throw Error(\"invalid token\");\n    }\n    return payload;\n  }\n}\n\n//# sourceMappingURL=AccessToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvQWNjZXNzVG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNkI7QUFDb0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsU0FBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwwQkFBMEI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHdCQUF3QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix5Q0FBWSxDQUFDLDhEQUFrQixvQ0FBb0MsY0FBYztBQUNyRztBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksVUFBVSxRQUFRLDJDQUFjLGtCQUFrQixxQkFBcUI7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3ZvaWNlLWFzc2lzdGFudDIvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvQWNjZXNzVG9rZW4uanM/YzFiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBqb3NlIGZyb20gXCJqb3NlXCI7XG5pbXBvcnQgeyBjbGFpbXNUb0p3dFBheWxvYWQgfSBmcm9tIFwiLi9ncmFudHMuanNcIjtcbmNvbnN0IGRlZmF1bHRUVEwgPSBgNmhgO1xuY2xhc3MgQWNjZXNzVG9rZW4ge1xuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBBY2Nlc3NUb2tlblxuICAgKiBAcGFyYW0gYXBpS2V5IC0gQVBJIEtleSwgY2FuIGJlIHNldCBpbiBlbnYgTElWRUtJVF9BUElfS0VZXG4gICAqIEBwYXJhbSBhcGlTZWNyZXQgLSBTZWNyZXQsIGNhbiBiZSBzZXQgaW4gZW52IExJVkVLSVRfQVBJX1NFQ1JFVFxuICAgKi9cbiAgY29uc3RydWN0b3IoYXBpS2V5LCBhcGlTZWNyZXQsIG9wdGlvbnMpIHtcbiAgICBpZiAoIWFwaUtleSkge1xuICAgICAgYXBpS2V5ID0gcHJvY2Vzcy5lbnYuTElWRUtJVF9BUElfS0VZO1xuICAgIH1cbiAgICBpZiAoIWFwaVNlY3JldCkge1xuICAgICAgYXBpU2VjcmV0ID0gcHJvY2Vzcy5lbnYuTElWRUtJVF9BUElfU0VDUkVUO1xuICAgIH1cbiAgICBpZiAoIWFwaUtleSB8fCAhYXBpU2VjcmV0KSB7XG4gICAgICB0aHJvdyBFcnJvcihcImFwaS1rZXkgYW5kIGFwaS1zZWNyZXQgbXVzdCBiZSBzZXRcIik7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIFwiWW91IHNob3VsZCBub3QgaW5jbHVkZSB5b3VyIEFQSSBzZWNyZXQgaW4geW91ciB3ZWIgY2xpZW50IGJ1bmRsZS5cXG5cXG5Zb3VyIHdlYiBjbGllbnQgc2hvdWxkIHJlcXVlc3QgYSB0b2tlbiBmcm9tIHlvdXIgYmFja2VuZCBzZXJ2ZXIgd2hpY2ggc2hvdWxkIHRoZW4gdXNlIHRoZSBBUEkgc2VjcmV0IHRvIGdlbmVyYXRlIGEgdG9rZW4uIFNlZSBodHRwczovL2RvY3MubGl2ZWtpdC5pby9jbGllbnQvY29ubmVjdC9cIlxuICAgICAgKTtcbiAgICB9XG4gICAgdGhpcy5hcGlLZXkgPSBhcGlLZXk7XG4gICAgdGhpcy5hcGlTZWNyZXQgPSBhcGlTZWNyZXQ7XG4gICAgdGhpcy5ncmFudHMgPSB7fTtcbiAgICB0aGlzLmlkZW50aXR5ID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5pZGVudGl0eTtcbiAgICB0aGlzLnR0bCA9IChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnR0bCkgfHwgZGVmYXVsdFRUTDtcbiAgICBpZiAodHlwZW9mIHRoaXMudHRsID09PSBcIm51bWJlclwiKSB7XG4gICAgICB0aGlzLnR0bCA9IGAke3RoaXMudHRsfXNgO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5tZXRhZGF0YSkge1xuICAgICAgdGhpcy5tZXRhZGF0YSA9IG9wdGlvbnMubWV0YWRhdGE7XG4gICAgfVxuICAgIGlmIChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmF0dHJpYnV0ZXMpIHtcbiAgICAgIHRoaXMuYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcztcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubmFtZSkge1xuICAgICAgdGhpcy5uYW1lID0gb3B0aW9ucy5uYW1lO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogQWRkcyBhIHZpZGVvIGdyYW50IHRvIHRoaXMgdG9rZW4uXG4gICAqIEBwYXJhbSBncmFudCAtXG4gICAqL1xuICBhZGRHcmFudChncmFudCkge1xuICAgIHRoaXMuZ3JhbnRzLnZpZGVvID0geyAuLi50aGlzLmdyYW50cy52aWRlbyA/PyB7fSwgLi4uZ3JhbnQgfTtcbiAgfVxuICAvKipcbiAgICogQWRkcyBhIFNJUCBncmFudCB0byB0aGlzIHRva2VuLlxuICAgKiBAcGFyYW0gZ3JhbnQgLVxuICAgKi9cbiAgYWRkU0lQR3JhbnQoZ3JhbnQpIHtcbiAgICB0aGlzLmdyYW50cy5zaXAgPSB7IC4uLnRoaXMuZ3JhbnRzLnNpcCA/PyB7fSwgLi4uZ3JhbnQgfTtcbiAgfVxuICBnZXQgbmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5ncmFudHMubmFtZTtcbiAgfVxuICBzZXQgbmFtZShuYW1lKSB7XG4gICAgdGhpcy5ncmFudHMubmFtZSA9IG5hbWU7XG4gIH1cbiAgZ2V0IG1ldGFkYXRhKCkge1xuICAgIHJldHVybiB0aGlzLmdyYW50cy5tZXRhZGF0YTtcbiAgfVxuICAvKipcbiAgICogU2V0IG1ldGFkYXRhIHRvIGJlIHBhc3NlZCB0byB0aGUgUGFydGljaXBhbnQsIHVzZWQgb25seSB3aGVuIGpvaW5pbmcgdGhlIHJvb21cbiAgICovXG4gIHNldCBtZXRhZGF0YShtZCkge1xuICAgIHRoaXMuZ3JhbnRzLm1ldGFkYXRhID0gbWQ7XG4gIH1cbiAgZ2V0IGF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ3JhbnRzLmF0dHJpYnV0ZXM7XG4gIH1cbiAgc2V0IGF0dHJpYnV0ZXMoYXR0cnMpIHtcbiAgICB0aGlzLmdyYW50cy5hdHRyaWJ1dGVzID0gYXR0cnM7XG4gIH1cbiAgZ2V0IGtpbmQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ3JhbnRzLmtpbmQ7XG4gIH1cbiAgc2V0IGtpbmQoa2luZCkge1xuICAgIHRoaXMuZ3JhbnRzLmtpbmQgPSBraW5kO1xuICB9XG4gIGdldCBzaGEyNTYoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ3JhbnRzLnNoYTI1NjtcbiAgfVxuICBzZXQgc2hhMjU2KHNoYSkge1xuICAgIHRoaXMuZ3JhbnRzLnNoYTI1NiA9IHNoYTtcbiAgfVxuICBnZXQgcm9vbVByZXNldCgpIHtcbiAgICByZXR1cm4gdGhpcy5ncmFudHMucm9vbVByZXNldDtcbiAgfVxuICBzZXQgcm9vbVByZXNldChwcmVzZXQpIHtcbiAgICB0aGlzLmdyYW50cy5yb29tUHJlc2V0ID0gcHJlc2V0O1xuICB9XG4gIGdldCByb29tQ29uZmlnKCkge1xuICAgIHJldHVybiB0aGlzLmdyYW50cy5yb29tQ29uZmlnO1xuICB9XG4gIHNldCByb29tQ29uZmlnKGNvbmZpZykge1xuICAgIHRoaXMuZ3JhbnRzLnJvb21Db25maWcgPSBjb25maWc7XG4gIH1cbiAgLyoqXG4gICAqIEByZXR1cm5zIEpXVCBlbmNvZGVkIHRva2VuXG4gICAqL1xuICBhc3luYyB0b0p3dCgpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgc2VjcmV0ID0gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHRoaXMuYXBpU2VjcmV0KTtcbiAgICBjb25zdCBqd3QgPSBuZXcgam9zZS5TaWduSldUKGNsYWltc1RvSnd0UGF5bG9hZCh0aGlzLmdyYW50cykpLnNldFByb3RlY3RlZEhlYWRlcih7IGFsZzogXCJIUzI1NlwiIH0pLnNldElzc3Vlcih0aGlzLmFwaUtleSkuc2V0RXhwaXJhdGlvblRpbWUodGhpcy50dGwpLnNldE5vdEJlZm9yZSgwKTtcbiAgICBpZiAodGhpcy5pZGVudGl0eSkge1xuICAgICAgand0LnNldFN1YmplY3QodGhpcy5pZGVudGl0eSk7XG4gICAgfSBlbHNlIGlmICgoX2EgPSB0aGlzLmdyYW50cy52aWRlbykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnJvb21Kb2luKSB7XG4gICAgICB0aHJvdyBFcnJvcihcImlkZW50aXR5IGlzIHJlcXVpcmVkIGZvciBqb2luIGJ1dCBub3Qgc2V0XCIpO1xuICAgIH1cbiAgICByZXR1cm4gand0LnNpZ24oc2VjcmV0KTtcbiAgfVxufVxuY2xhc3MgVG9rZW5WZXJpZmllciB7XG4gIGNvbnN0cnVjdG9yKGFwaUtleSwgYXBpU2VjcmV0KSB7XG4gICAgdGhpcy5hcGlLZXkgPSBhcGlLZXk7XG4gICAgdGhpcy5hcGlTZWNyZXQgPSBhcGlTZWNyZXQ7XG4gIH1cbiAgYXN5bmMgdmVyaWZ5KHRva2VuKSB7XG4gICAgY29uc3Qgc2VjcmV0ID0gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHRoaXMuYXBpU2VjcmV0KTtcbiAgICBjb25zdCB7IHBheWxvYWQgfSA9IGF3YWl0IGpvc2Uuand0VmVyaWZ5KHRva2VuLCBzZWNyZXQsIHsgaXNzdWVyOiB0aGlzLmFwaUtleSB9KTtcbiAgICBpZiAoIXBheWxvYWQpIHtcbiAgICAgIHRocm93IEVycm9yKFwiaW52YWxpZCB0b2tlblwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHBheWxvYWQ7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIEFjY2Vzc1Rva2VuLFxuICBUb2tlblZlcmlmaWVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWNjZXNzVG9rZW4uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/AccessToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/AgentDispatchClient.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/AgentDispatchClient.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentDispatchClient: () => (/* binding */ AgentDispatchClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.33.0/node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = \"AgentDispatchService\";\nclass AgentDispatchClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__.ServiceBase {\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host, apiKey, secret) {\n    super(apiKey, secret);\n    this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n  }\n  /**\n   * Create an explicit dispatch for an agent to join a room. To use explicit\n   * dispatch, your agent must be registered with an `agentName`.\n   * @param roomName - name of the room to dispatch to\n   * @param agentName - name of the agent to dispatch\n   * @param options - optional metadata to send along with the dispatch\n   * @returns the dispatch that was created\n   */\n  async createDispatch(roomName, agentName, options) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateAgentDispatchRequest({\n      room: roomName,\n      agentName,\n      metadata: options == null ? void 0 : options.metadata\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateDispatch\",\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AgentDispatch.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Delete an explicit dispatch for an agent in a room.\n   * @param dispatchId - id of the dispatch to delete\n   * @param roomName - name of the room the dispatch is for\n   */\n  async deleteDispatch(dispatchId, roomName) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteAgentDispatchRequest({\n      dispatchId,\n      room: roomName\n    }).toJson();\n    await this.rpc.request(\n      svc,\n      \"DeleteDispatch\",\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName })\n    );\n  }\n  /**\n   * Get an Agent dispatch by ID\n   * @param dispatchId - id of the dispatch to get\n   * @param roomName - name of the room the dispatch is for\n   * @returns the dispatch that was found, or undefined if not found\n   */\n  async getDispatch(dispatchId, roomName) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListAgentDispatchRequest({\n      dispatchId,\n      room: roomName\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"ListDispatch\",\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName })\n    );\n    const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListAgentDispatchResponse.fromJson(data, { ignoreUnknownFields: true });\n    if (res.agentDispatches.length === 0) {\n      return void 0;\n    }\n    return res.agentDispatches[0];\n  }\n  /**\n   * List all agent dispatches for a room\n   * @param roomName - name of the room to list dispatches for\n   * @returns the list of dispatches\n   */\n  async listDispatch(roomName) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListAgentDispatchRequest({\n      room: roomName\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"ListDispatch\",\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName })\n    );\n    const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListAgentDispatchResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.agentDispatches;\n  }\n}\n\n//# sourceMappingURL=AgentDispatchClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvQWdlbnREaXNwYXRjaENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBTTJCO0FBQ29CO0FBQ1U7QUFDekQ7QUFDQSxrQ0FBa0Msd0RBQVc7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0RBQVEsT0FBTyx3REFBYztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix5RUFBMEI7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGlDQUFpQztBQUMvRDtBQUNBLFdBQVcsNERBQWEsa0JBQWtCLDJCQUEyQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix5RUFBMEI7QUFDOUM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixpQ0FBaUM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVFQUF3QjtBQUM1QztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGlDQUFpQztBQUMvRDtBQUNBLGdCQUFnQix3RUFBeUIsa0JBQWtCLDJCQUEyQjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVFQUF3QjtBQUM1QztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixpQ0FBaUM7QUFDL0Q7QUFDQSxnQkFBZ0Isd0VBQXlCLGtCQUFrQiwyQkFBMkI7QUFDdEY7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3ZvaWNlLWFzc2lzdGFudDIvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvQWdlbnREaXNwYXRjaENsaWVudC5qcz9jMTBlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFnZW50RGlzcGF0Y2gsXG4gIENyZWF0ZUFnZW50RGlzcGF0Y2hSZXF1ZXN0LFxuICBEZWxldGVBZ2VudERpc3BhdGNoUmVxdWVzdCxcbiAgTGlzdEFnZW50RGlzcGF0Y2hSZXF1ZXN0LFxuICBMaXN0QWdlbnREaXNwYXRjaFJlc3BvbnNlXG59IGZyb20gXCJAbGl2ZWtpdC9wcm90b2NvbFwiO1xuaW1wb3J0IHsgU2VydmljZUJhc2UgfSBmcm9tIFwiLi9TZXJ2aWNlQmFzZS5qc1wiO1xuaW1wb3J0IHsgVHdpcnBScGMsIGxpdmVraXRQYWNrYWdlIH0gZnJvbSBcIi4vVHdpcnBSUEMuanNcIjtcbmNvbnN0IHN2YyA9IFwiQWdlbnREaXNwYXRjaFNlcnZpY2VcIjtcbmNsYXNzIEFnZW50RGlzcGF0Y2hDbGllbnQgZXh0ZW5kcyBTZXJ2aWNlQmFzZSB7XG4gIC8qKlxuICAgKiBAcGFyYW0gaG9zdCAtIGhvc3RuYW1lIGluY2x1ZGluZyBwcm90b2NvbC4gaS5lLiAnaHR0cHM6Ly88cHJvamVjdD4ubGl2ZWtpdC5jbG91ZCdcbiAgICogQHBhcmFtIGFwaUtleSAtIEFQSSBLZXksIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9LRVlcbiAgICogQHBhcmFtIHNlY3JldCAtIEFQSSBTZWNyZXQsIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9TRUNSRVRcbiAgICovXG4gIGNvbnN0cnVjdG9yKGhvc3QsIGFwaUtleSwgc2VjcmV0KSB7XG4gICAgc3VwZXIoYXBpS2V5LCBzZWNyZXQpO1xuICAgIHRoaXMucnBjID0gbmV3IFR3aXJwUnBjKGhvc3QsIGxpdmVraXRQYWNrYWdlKTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGFuIGV4cGxpY2l0IGRpc3BhdGNoIGZvciBhbiBhZ2VudCB0byBqb2luIGEgcm9vbS4gVG8gdXNlIGV4cGxpY2l0XG4gICAqIGRpc3BhdGNoLCB5b3VyIGFnZW50IG11c3QgYmUgcmVnaXN0ZXJlZCB3aXRoIGFuIGBhZ2VudE5hbWVgLlxuICAgKiBAcGFyYW0gcm9vbU5hbWUgLSBuYW1lIG9mIHRoZSByb29tIHRvIGRpc3BhdGNoIHRvXG4gICAqIEBwYXJhbSBhZ2VudE5hbWUgLSBuYW1lIG9mIHRoZSBhZ2VudCB0byBkaXNwYXRjaFxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIG9wdGlvbmFsIG1ldGFkYXRhIHRvIHNlbmQgYWxvbmcgd2l0aCB0aGUgZGlzcGF0Y2hcbiAgICogQHJldHVybnMgdGhlIGRpc3BhdGNoIHRoYXQgd2FzIGNyZWF0ZWRcbiAgICovXG4gIGFzeW5jIGNyZWF0ZURpc3BhdGNoKHJvb21OYW1lLCBhZ2VudE5hbWUsIG9wdGlvbnMpIHtcbiAgICBjb25zdCByZXEgPSBuZXcgQ3JlYXRlQWdlbnREaXNwYXRjaFJlcXVlc3Qoe1xuICAgICAgcm9vbTogcm9vbU5hbWUsXG4gICAgICBhZ2VudE5hbWUsXG4gICAgICBtZXRhZGF0YTogb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5tZXRhZGF0YVxuICAgIH0pLnRvSnNvbigpO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KFxuICAgICAgc3ZjLFxuICAgICAgXCJDcmVhdGVEaXNwYXRjaFwiLFxuICAgICAgcmVxLFxuICAgICAgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHsgcm9vbUFkbWluOiB0cnVlLCByb29tOiByb29tTmFtZSB9KVxuICAgICk7XG4gICAgcmV0dXJuIEFnZW50RGlzcGF0Y2guZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICB9XG4gIC8qKlxuICAgKiBEZWxldGUgYW4gZXhwbGljaXQgZGlzcGF0Y2ggZm9yIGFuIGFnZW50IGluIGEgcm9vbS5cbiAgICogQHBhcmFtIGRpc3BhdGNoSWQgLSBpZCBvZiB0aGUgZGlzcGF0Y2ggdG8gZGVsZXRlXG4gICAqIEBwYXJhbSByb29tTmFtZSAtIG5hbWUgb2YgdGhlIHJvb20gdGhlIGRpc3BhdGNoIGlzIGZvclxuICAgKi9cbiAgYXN5bmMgZGVsZXRlRGlzcGF0Y2goZGlzcGF0Y2hJZCwgcm9vbU5hbWUpIHtcbiAgICBjb25zdCByZXEgPSBuZXcgRGVsZXRlQWdlbnREaXNwYXRjaFJlcXVlc3Qoe1xuICAgICAgZGlzcGF0Y2hJZCxcbiAgICAgIHJvb206IHJvb21OYW1lXG4gICAgfSkudG9Kc29uKCk7XG4gICAgYXdhaXQgdGhpcy5ycGMucmVxdWVzdChcbiAgICAgIHN2YyxcbiAgICAgIFwiRGVsZXRlRGlzcGF0Y2hcIixcbiAgICAgIHJlcSxcbiAgICAgIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IHJvb21BZG1pbjogdHJ1ZSwgcm9vbTogcm9vbU5hbWUgfSlcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgYW4gQWdlbnQgZGlzcGF0Y2ggYnkgSURcbiAgICogQHBhcmFtIGRpc3BhdGNoSWQgLSBpZCBvZiB0aGUgZGlzcGF0Y2ggdG8gZ2V0XG4gICAqIEBwYXJhbSByb29tTmFtZSAtIG5hbWUgb2YgdGhlIHJvb20gdGhlIGRpc3BhdGNoIGlzIGZvclxuICAgKiBAcmV0dXJucyB0aGUgZGlzcGF0Y2ggdGhhdCB3YXMgZm91bmQsIG9yIHVuZGVmaW5lZCBpZiBub3QgZm91bmRcbiAgICovXG4gIGFzeW5jIGdldERpc3BhdGNoKGRpc3BhdGNoSWQsIHJvb21OYW1lKSB7XG4gICAgY29uc3QgcmVxID0gbmV3IExpc3RBZ2VudERpc3BhdGNoUmVxdWVzdCh7XG4gICAgICBkaXNwYXRjaElkLFxuICAgICAgcm9vbTogcm9vbU5hbWVcbiAgICB9KS50b0pzb24oKTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChcbiAgICAgIHN2YyxcbiAgICAgIFwiTGlzdERpc3BhdGNoXCIsXG4gICAgICByZXEsXG4gICAgICBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyByb29tQWRtaW46IHRydWUsIHJvb206IHJvb21OYW1lIH0pXG4gICAgKTtcbiAgICBjb25zdCByZXMgPSBMaXN0QWdlbnREaXNwYXRjaFJlc3BvbnNlLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgICBpZiAocmVzLmFnZW50RGlzcGF0Y2hlcy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIHJldHVybiByZXMuYWdlbnREaXNwYXRjaGVzWzBdO1xuICB9XG4gIC8qKlxuICAgKiBMaXN0IGFsbCBhZ2VudCBkaXNwYXRjaGVzIGZvciBhIHJvb21cbiAgICogQHBhcmFtIHJvb21OYW1lIC0gbmFtZSBvZiB0aGUgcm9vbSB0byBsaXN0IGRpc3BhdGNoZXMgZm9yXG4gICAqIEByZXR1cm5zIHRoZSBsaXN0IG9mIGRpc3BhdGNoZXNcbiAgICovXG4gIGFzeW5jIGxpc3REaXNwYXRjaChyb29tTmFtZSkge1xuICAgIGNvbnN0IHJlcSA9IG5ldyBMaXN0QWdlbnREaXNwYXRjaFJlcXVlc3Qoe1xuICAgICAgcm9vbTogcm9vbU5hbWVcbiAgICB9KS50b0pzb24oKTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChcbiAgICAgIHN2YyxcbiAgICAgIFwiTGlzdERpc3BhdGNoXCIsXG4gICAgICByZXEsXG4gICAgICBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyByb29tQWRtaW46IHRydWUsIHJvb206IHJvb21OYW1lIH0pXG4gICAgKTtcbiAgICBjb25zdCByZXMgPSBMaXN0QWdlbnREaXNwYXRjaFJlc3BvbnNlLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgICByZXR1cm4gcmVzLmFnZW50RGlzcGF0Y2hlcztcbiAgfVxufVxuZXhwb3J0IHtcbiAgQWdlbnREaXNwYXRjaENsaWVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFnZW50RGlzcGF0Y2hDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/AgentDispatchClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/EgressClient.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/EgressClient.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EgressClient: () => (/* binding */ EgressClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.33.0/node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = \"Egress\";\nclass EgressClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__.ServiceBase {\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host, apiKey, secret) {\n    super(apiKey, secret);\n    this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n  }\n  async startRoomCompositeEgress(roomName, output, optsOrLayout, options, audioOnly, videoOnly, customBaseUrl) {\n    let layout;\n    if (optsOrLayout !== void 0) {\n      if (typeof optsOrLayout === \"string\") {\n        layout = optsOrLayout;\n      } else {\n        const opts = optsOrLayout;\n        layout = opts.layout;\n        options = opts.encodingOptions;\n        audioOnly = opts.audioOnly;\n        videoOnly = opts.videoOnly;\n        customBaseUrl = opts.customBaseUrl;\n      }\n    }\n    layout ??= \"\";\n    audioOnly ??= false;\n    videoOnly ??= false;\n    customBaseUrl ??= \"\";\n    const {\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    } = this.getOutputParams(output, options);\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomCompositeEgressRequest({\n      roomName,\n      layout,\n      audioOnly,\n      videoOnly,\n      customBaseUrl,\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"StartRoomCompositeEgress\",\n      req,\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param url - url\n   * @param output - file or stream output\n   * @param opts - WebOptions\n   */\n  async startWebEgress(url, output, opts) {\n    const audioOnly = (opts == null ? void 0 : opts.audioOnly) || false;\n    const videoOnly = (opts == null ? void 0 : opts.videoOnly) || false;\n    const awaitStartSignal = (opts == null ? void 0 : opts.awaitStartSignal) || false;\n    const {\n      output: legacyOutput,\n      options,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    } = this.getOutputParams(output, opts == null ? void 0 : opts.encodingOptions);\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebEgressRequest({\n      url,\n      audioOnly,\n      videoOnly,\n      awaitStartSignal,\n      output: legacyOutput,\n      options,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"StartWebEgress\",\n      req,\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Export a participant's audio and video tracks,\n   *\n   * @param roomName - room name\n   * @param output - one or more outputs\n   * @param opts - ParticipantEgressOptions\n   */\n  async startParticipantEgress(roomName, identity, output, opts) {\n    const { options, fileOutputs, streamOutputs, segmentOutputs, imageOutputs } = this.getOutputParams(output, opts == null ? void 0 : opts.encodingOptions);\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantEgressRequest({\n      roomName,\n      identity,\n      screenShare: (opts == null ? void 0 : opts.screenShare) ?? false,\n      options,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"StartParticipantEgress\",\n      req,\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  async startTrackCompositeEgress(roomName, output, optsOrAudioTrackId, videoTrackId, options) {\n    let audioTrackId;\n    if (optsOrAudioTrackId !== void 0) {\n      if (typeof optsOrAudioTrackId === \"string\") {\n        audioTrackId = optsOrAudioTrackId;\n      } else {\n        const opts = optsOrAudioTrackId;\n        audioTrackId = opts.audioTrackId;\n        videoTrackId = opts.videoTrackId;\n        options = opts.encodingOptions;\n      }\n    }\n    audioTrackId ??= \"\";\n    videoTrackId ??= \"\";\n    const {\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    } = this.getOutputParams(output, options);\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackCompositeEgressRequest({\n      roomName,\n      audioTrackId,\n      videoTrackId,\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"StartTrackCompositeEgress\",\n      req,\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isEncodedOutputs(output) {\n    return output.file !== void 0 || output.stream !== void 0 || output.segments !== void 0 || output.images !== void 0;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isEncodedFileOutput(output) {\n    return output.filepath !== void 0 || output.fileType !== void 0;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isSegmentedFileOutput(output) {\n    return output.filenamePrefix !== void 0 || output.playlistName !== void 0 || output.filenameSuffix !== void 0;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isStreamOutput(output) {\n    return output.protocol !== void 0 || output.urls !== void 0;\n  }\n  getOutputParams(output, opts) {\n    let file;\n    let fileOutputs;\n    let stream;\n    let streamOutputs;\n    let segments;\n    let segmentOutputs;\n    let imageOutputs;\n    if (this.isEncodedOutputs(output)) {\n      if (output.file !== void 0) {\n        fileOutputs = [output.file];\n      }\n      if (output.stream !== void 0) {\n        streamOutputs = [output.stream];\n      }\n      if (output.segments !== void 0) {\n        segmentOutputs = [output.segments];\n      }\n      if (output.images !== void 0) {\n        imageOutputs = [output.images];\n      }\n    } else if (this.isEncodedFileOutput(output)) {\n      file = output;\n      fileOutputs = [file];\n    } else if (this.isSegmentedFileOutput(output)) {\n      segments = output;\n      segmentOutputs = [segments];\n    } else if (this.isStreamOutput(output)) {\n      stream = output;\n      streamOutputs = [stream];\n    }\n    let legacyOutput;\n    if (file) {\n      legacyOutput = {\n        case: \"file\",\n        value: file\n      };\n    } else if (stream) {\n      legacyOutput = {\n        case: \"stream\",\n        value: stream\n      };\n    } else if (segments) {\n      legacyOutput = {\n        case: \"segments\",\n        value: segments\n      };\n    }\n    let egressOptions;\n    if (opts) {\n      if (typeof opts === \"number\") {\n        egressOptions = {\n          case: \"preset\",\n          value: opts\n        };\n      } else {\n        egressOptions = {\n          case: \"advanced\",\n          value: opts\n        };\n      }\n    }\n    return {\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    };\n  }\n  /**\n   * @param roomName - room name\n   * @param output - file or websocket output\n   * @param trackId - track Id\n   */\n  async startTrackEgress(roomName, output, trackId) {\n    let legacyOutput;\n    if (typeof output === \"string\") {\n      legacyOutput = {\n        case: \"websocketUrl\",\n        value: output\n      };\n    } else {\n      legacyOutput = {\n        case: \"file\",\n        value: output\n      };\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackEgressRequest({\n      roomName,\n      trackId,\n      output: legacyOutput\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"StartTrackEgress\",\n      req,\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param egressId -\n   * @param layout -\n   */\n  async updateLayout(egressId, layout) {\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateLayout\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateLayoutRequest({ egressId, layout }).toJson(),\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param egressId -\n   * @param addOutputUrls -\n   * @param removeOutputUrls -\n   */\n  async updateStream(egressId, addOutputUrls, removeOutputUrls) {\n    addOutputUrls ??= [];\n    removeOutputUrls ??= [];\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateStream\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateStreamRequest({ egressId, addOutputUrls, removeOutputUrls }).toJson(),\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param roomName - list egress for one room only\n   */\n  async listEgress(options) {\n    let req = {};\n    if (typeof options === \"string\") {\n      req.roomName = options;\n    } else if (options !== void 0) {\n      req = options;\n    }\n    const data = await this.rpc.request(\n      svc,\n      \"ListEgress\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListEgressRequest(req).toJson(),\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListEgressResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  /**\n   * @param egressId -\n   */\n  async stopEgress(egressId) {\n    const data = await this.rpc.request(\n      svc,\n      \"StopEgress\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StopEgressRequest({ egressId }).toJson(),\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n}\n\n//# sourceMappingURL=EgressClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/EgressClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/IngressClient.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/IngressClient.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IngressClient: () => (/* binding */ IngressClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.33.0/node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = \"Ingress\";\nclass IngressClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__.ServiceBase {\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host, apiKey, secret) {\n    super(apiKey, secret);\n    this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n  }\n  /**\n   * @param inputType - protocol for the ingress\n   * @param opts - CreateIngressOptions\n   */\n  async createIngress(inputType, opts) {\n    let name = \"\";\n    let participantName = \"\";\n    let participantIdentity = \"\";\n    let bypassTranscoding = false;\n    let url = \"\";\n    if (opts == null) {\n      throw new Error(\"options dictionary is required\");\n    }\n    const roomName = opts.roomName;\n    const enableTranscoding = opts.enableTranscoding;\n    const audio = opts.audio;\n    const video = opts.video;\n    const participantMetadata = opts.participantMetadata;\n    name = opts.name || \"\";\n    participantName = opts.participantName || \"\";\n    participantIdentity = opts.participantIdentity || \"\";\n    bypassTranscoding = opts.bypassTranscoding || false;\n    url = opts.url || \"\";\n    if (typeof roomName == \"undefined\") {\n      throw new Error(\"required roomName option not provided\");\n    }\n    if (participantIdentity == \"\") {\n      throw new Error(\"required participantIdentity option not provided\");\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateIngressRequest({\n      inputType,\n      name,\n      roomName,\n      participantIdentity,\n      participantMetadata,\n      participantName,\n      bypassTranscoding,\n      enableTranscoding,\n      url,\n      audio,\n      video\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateIngress\",\n      req,\n      await this.authHeader({ ingressAdmin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param ingressId - ID of the ingress to update\n   * @param opts - UpdateIngressOptions\n   */\n  async updateIngress(ingressId, opts) {\n    const name = opts.name || \"\";\n    const roomName = opts.roomName || \"\";\n    const participantName = opts.participantName || \"\";\n    const participantIdentity = opts.participantIdentity || \"\";\n    const { participantMetadata } = opts;\n    const { audio, video, bypassTranscoding, enableTranscoding } = opts;\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateIngressRequest({\n      ingressId,\n      name,\n      roomName,\n      participantIdentity,\n      participantName,\n      participantMetadata,\n      bypassTranscoding,\n      enableTranscoding,\n      audio,\n      video\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateIngress\",\n      req,\n      await this.authHeader({ ingressAdmin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param arg - list room name or options\n   */\n  async listIngress(arg) {\n    let req = {};\n    if (typeof arg === \"string\") {\n      req.roomName = arg;\n    } else if (arg) {\n      req = arg;\n    }\n    const data = await this.rpc.request(\n      svc,\n      \"ListIngress\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListIngressRequest(req).toJson(),\n      await this.authHeader({ ingressAdmin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListIngressResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  /**\n   * @param ingressId - ingress to delete\n   */\n  async deleteIngress(ingressId) {\n    const data = await this.rpc.request(\n      svc,\n      \"DeleteIngress\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteIngressRequest({ ingressId }).toJson(),\n      await this.authHeader({ ingressAdmin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n}\n\n//# sourceMappingURL=IngressClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvSW5ncmVzc0NsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBTzJCO0FBQ29CO0FBQ1U7QUFDekQ7QUFDQSw0QkFBNEIsd0RBQVc7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0RBQVEsT0FBTyx3REFBYztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUVBQW9CO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsb0JBQW9CO0FBQ2xEO0FBQ0EsV0FBVywwREFBVyxrQkFBa0IsMkJBQTJCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxzQkFBc0I7QUFDbEMsWUFBWSxxREFBcUQ7QUFDakUsb0JBQW9CLG1FQUFvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixvQkFBb0I7QUFDbEQ7QUFDQSxXQUFXLDBEQUFXLGtCQUFrQiwyQkFBMkI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxpRUFBa0I7QUFDNUIsOEJBQThCLG9CQUFvQjtBQUNsRDtBQUNBLFdBQVcsa0VBQW1CLGtCQUFrQiwyQkFBMkI7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsbUVBQW9CLEdBQUcsV0FBVztBQUM1Qyw4QkFBOEIsb0JBQW9CO0FBQ2xEO0FBQ0EsV0FBVywwREFBVyxrQkFBa0IsMkJBQTJCO0FBQ25FO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdm9pY2UtYXNzaXN0YW50Mi8uL25vZGVfbW9kdWxlcy8ucG5wbS9saXZla2l0LXNlcnZlci1zZGtAMi4xMC4xL25vZGVfbW9kdWxlcy9saXZla2l0LXNlcnZlci1zZGsvZGlzdC9JbmdyZXNzQ2xpZW50LmpzPzBkMmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ3JlYXRlSW5ncmVzc1JlcXVlc3QsXG4gIERlbGV0ZUluZ3Jlc3NSZXF1ZXN0LFxuICBJbmdyZXNzSW5mbyxcbiAgTGlzdEluZ3Jlc3NSZXF1ZXN0LFxuICBMaXN0SW5ncmVzc1Jlc3BvbnNlLFxuICBVcGRhdGVJbmdyZXNzUmVxdWVzdFxufSBmcm9tIFwiQGxpdmVraXQvcHJvdG9jb2xcIjtcbmltcG9ydCB7IFNlcnZpY2VCYXNlIH0gZnJvbSBcIi4vU2VydmljZUJhc2UuanNcIjtcbmltcG9ydCB7IFR3aXJwUnBjLCBsaXZla2l0UGFja2FnZSB9IGZyb20gXCIuL1R3aXJwUlBDLmpzXCI7XG5jb25zdCBzdmMgPSBcIkluZ3Jlc3NcIjtcbmNsYXNzIEluZ3Jlc3NDbGllbnQgZXh0ZW5kcyBTZXJ2aWNlQmFzZSB7XG4gIC8qKlxuICAgKiBAcGFyYW0gaG9zdCAtIGhvc3RuYW1lIGluY2x1ZGluZyBwcm90b2NvbC4gaS5lLiAnaHR0cHM6Ly88cHJvamVjdD4ubGl2ZWtpdC5jbG91ZCdcbiAgICogQHBhcmFtIGFwaUtleSAtIEFQSSBLZXksIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9LRVlcbiAgICogQHBhcmFtIHNlY3JldCAtIEFQSSBTZWNyZXQsIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9TRUNSRVRcbiAgICovXG4gIGNvbnN0cnVjdG9yKGhvc3QsIGFwaUtleSwgc2VjcmV0KSB7XG4gICAgc3VwZXIoYXBpS2V5LCBzZWNyZXQpO1xuICAgIHRoaXMucnBjID0gbmV3IFR3aXJwUnBjKGhvc3QsIGxpdmVraXRQYWNrYWdlKTtcbiAgfVxuICAvKipcbiAgICogQHBhcmFtIGlucHV0VHlwZSAtIHByb3RvY29sIGZvciB0aGUgaW5ncmVzc1xuICAgKiBAcGFyYW0gb3B0cyAtIENyZWF0ZUluZ3Jlc3NPcHRpb25zXG4gICAqL1xuICBhc3luYyBjcmVhdGVJbmdyZXNzKGlucHV0VHlwZSwgb3B0cykge1xuICAgIGxldCBuYW1lID0gXCJcIjtcbiAgICBsZXQgcGFydGljaXBhbnROYW1lID0gXCJcIjtcbiAgICBsZXQgcGFydGljaXBhbnRJZGVudGl0eSA9IFwiXCI7XG4gICAgbGV0IGJ5cGFzc1RyYW5zY29kaW5nID0gZmFsc2U7XG4gICAgbGV0IHVybCA9IFwiXCI7XG4gICAgaWYgKG9wdHMgPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwib3B0aW9ucyBkaWN0aW9uYXJ5IGlzIHJlcXVpcmVkXCIpO1xuICAgIH1cbiAgICBjb25zdCByb29tTmFtZSA9IG9wdHMucm9vbU5hbWU7XG4gICAgY29uc3QgZW5hYmxlVHJhbnNjb2RpbmcgPSBvcHRzLmVuYWJsZVRyYW5zY29kaW5nO1xuICAgIGNvbnN0IGF1ZGlvID0gb3B0cy5hdWRpbztcbiAgICBjb25zdCB2aWRlbyA9IG9wdHMudmlkZW87XG4gICAgY29uc3QgcGFydGljaXBhbnRNZXRhZGF0YSA9IG9wdHMucGFydGljaXBhbnRNZXRhZGF0YTtcbiAgICBuYW1lID0gb3B0cy5uYW1lIHx8IFwiXCI7XG4gICAgcGFydGljaXBhbnROYW1lID0gb3B0cy5wYXJ0aWNpcGFudE5hbWUgfHwgXCJcIjtcbiAgICBwYXJ0aWNpcGFudElkZW50aXR5ID0gb3B0cy5wYXJ0aWNpcGFudElkZW50aXR5IHx8IFwiXCI7XG4gICAgYnlwYXNzVHJhbnNjb2RpbmcgPSBvcHRzLmJ5cGFzc1RyYW5zY29kaW5nIHx8IGZhbHNlO1xuICAgIHVybCA9IG9wdHMudXJsIHx8IFwiXCI7XG4gICAgaWYgKHR5cGVvZiByb29tTmFtZSA9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJyZXF1aXJlZCByb29tTmFtZSBvcHRpb24gbm90IHByb3ZpZGVkXCIpO1xuICAgIH1cbiAgICBpZiAocGFydGljaXBhbnRJZGVudGl0eSA9PSBcIlwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJyZXF1aXJlZCBwYXJ0aWNpcGFudElkZW50aXR5IG9wdGlvbiBub3QgcHJvdmlkZWRcIik7XG4gICAgfVxuICAgIGNvbnN0IHJlcSA9IG5ldyBDcmVhdGVJbmdyZXNzUmVxdWVzdCh7XG4gICAgICBpbnB1dFR5cGUsXG4gICAgICBuYW1lLFxuICAgICAgcm9vbU5hbWUsXG4gICAgICBwYXJ0aWNpcGFudElkZW50aXR5LFxuICAgICAgcGFydGljaXBhbnRNZXRhZGF0YSxcbiAgICAgIHBhcnRpY2lwYW50TmFtZSxcbiAgICAgIGJ5cGFzc1RyYW5zY29kaW5nLFxuICAgICAgZW5hYmxlVHJhbnNjb2RpbmcsXG4gICAgICB1cmwsXG4gICAgICBhdWRpbyxcbiAgICAgIHZpZGVvXG4gICAgfSkudG9Kc29uKCk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3QoXG4gICAgICBzdmMsXG4gICAgICBcIkNyZWF0ZUluZ3Jlc3NcIixcbiAgICAgIHJlcSxcbiAgICAgIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IGluZ3Jlc3NBZG1pbjogdHJ1ZSB9KVxuICAgICk7XG4gICAgcmV0dXJuIEluZ3Jlc3NJbmZvLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgfVxuICAvKipcbiAgICogQHBhcmFtIGluZ3Jlc3NJZCAtIElEIG9mIHRoZSBpbmdyZXNzIHRvIHVwZGF0ZVxuICAgKiBAcGFyYW0gb3B0cyAtIFVwZGF0ZUluZ3Jlc3NPcHRpb25zXG4gICAqL1xuICBhc3luYyB1cGRhdGVJbmdyZXNzKGluZ3Jlc3NJZCwgb3B0cykge1xuICAgIGNvbnN0IG5hbWUgPSBvcHRzLm5hbWUgfHwgXCJcIjtcbiAgICBjb25zdCByb29tTmFtZSA9IG9wdHMucm9vbU5hbWUgfHwgXCJcIjtcbiAgICBjb25zdCBwYXJ0aWNpcGFudE5hbWUgPSBvcHRzLnBhcnRpY2lwYW50TmFtZSB8fCBcIlwiO1xuICAgIGNvbnN0IHBhcnRpY2lwYW50SWRlbnRpdHkgPSBvcHRzLnBhcnRpY2lwYW50SWRlbnRpdHkgfHwgXCJcIjtcbiAgICBjb25zdCB7IHBhcnRpY2lwYW50TWV0YWRhdGEgfSA9IG9wdHM7XG4gICAgY29uc3QgeyBhdWRpbywgdmlkZW8sIGJ5cGFzc1RyYW5zY29kaW5nLCBlbmFibGVUcmFuc2NvZGluZyB9ID0gb3B0cztcbiAgICBjb25zdCByZXEgPSBuZXcgVXBkYXRlSW5ncmVzc1JlcXVlc3Qoe1xuICAgICAgaW5ncmVzc0lkLFxuICAgICAgbmFtZSxcbiAgICAgIHJvb21OYW1lLFxuICAgICAgcGFydGljaXBhbnRJZGVudGl0eSxcbiAgICAgIHBhcnRpY2lwYW50TmFtZSxcbiAgICAgIHBhcnRpY2lwYW50TWV0YWRhdGEsXG4gICAgICBieXBhc3NUcmFuc2NvZGluZyxcbiAgICAgIGVuYWJsZVRyYW5zY29kaW5nLFxuICAgICAgYXVkaW8sXG4gICAgICB2aWRlb1xuICAgIH0pLnRvSnNvbigpO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KFxuICAgICAgc3ZjLFxuICAgICAgXCJVcGRhdGVJbmdyZXNzXCIsXG4gICAgICByZXEsXG4gICAgICBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyBpbmdyZXNzQWRtaW46IHRydWUgfSlcbiAgICApO1xuICAgIHJldHVybiBJbmdyZXNzSW5mby5mcm9tSnNvbihkYXRhLCB7IGlnbm9yZVVua25vd25GaWVsZHM6IHRydWUgfSk7XG4gIH1cbiAgLyoqXG4gICAqIEBwYXJhbSBhcmcgLSBsaXN0IHJvb20gbmFtZSBvciBvcHRpb25zXG4gICAqL1xuICBhc3luYyBsaXN0SW5ncmVzcyhhcmcpIHtcbiAgICBsZXQgcmVxID0ge307XG4gICAgaWYgKHR5cGVvZiBhcmcgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHJlcS5yb29tTmFtZSA9IGFyZztcbiAgICB9IGVsc2UgaWYgKGFyZykge1xuICAgICAgcmVxID0gYXJnO1xuICAgIH1cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChcbiAgICAgIHN2YyxcbiAgICAgIFwiTGlzdEluZ3Jlc3NcIixcbiAgICAgIG5ldyBMaXN0SW5ncmVzc1JlcXVlc3QocmVxKS50b0pzb24oKSxcbiAgICAgIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IGluZ3Jlc3NBZG1pbjogdHJ1ZSB9KVxuICAgICk7XG4gICAgcmV0dXJuIExpc3RJbmdyZXNzUmVzcG9uc2UuZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pLml0ZW1zID8/IFtdO1xuICB9XG4gIC8qKlxuICAgKiBAcGFyYW0gaW5ncmVzc0lkIC0gaW5ncmVzcyB0byBkZWxldGVcbiAgICovXG4gIGFzeW5jIGRlbGV0ZUluZ3Jlc3MoaW5ncmVzc0lkKSB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3QoXG4gICAgICBzdmMsXG4gICAgICBcIkRlbGV0ZUluZ3Jlc3NcIixcbiAgICAgIG5ldyBEZWxldGVJbmdyZXNzUmVxdWVzdCh7IGluZ3Jlc3NJZCB9KS50b0pzb24oKSxcbiAgICAgIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IGluZ3Jlc3NBZG1pbjogdHJ1ZSB9KVxuICAgICk7XG4gICAgcmV0dXJuIEluZ3Jlc3NJbmZvLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgSW5ncmVzc0NsaWVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUluZ3Jlc3NDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/IngressClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/RoomServiceClient.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/RoomServiceClient.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RoomServiceClient: () => (/* binding */ RoomServiceClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.33.0/node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n/* harmony import */ var _crypto_uuid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./crypto/uuid.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/crypto/uuid.js\");\n\n\n\n\nconst svc = \"RoomService\";\nclass RoomServiceClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__.ServiceBase {\n  /**\n   *\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host, apiKey, secret) {\n    super(apiKey, secret);\n    this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n  }\n  /**\n   * Creates a new room. Explicit room creation is not required, since rooms will\n   * be automatically created when the first participant joins. This method can be\n   * used to customize room settings.\n   * @param options -\n   */\n  async createRoom(options) {\n    const data = await this.rpc.request(\n      svc,\n      \"CreateRoom\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateRoomRequest(options).toJson(),\n      await this.authHeader({ roomCreate: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * List active rooms\n   * @param names - when undefined or empty, list all rooms.\n   *                otherwise returns rooms with matching names\n   * @returns\n   */\n  async listRooms(names) {\n    const data = await this.rpc.request(\n      svc,\n      \"ListRooms\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListRoomsRequest({ names: names ?? [] }).toJson(),\n      await this.authHeader({ roomList: true })\n    );\n    const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListRoomsResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.rooms ?? [];\n  }\n  async deleteRoom(room) {\n    await this.rpc.request(\n      svc,\n      \"DeleteRoom\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteRoomRequest({ room }).toJson(),\n      await this.authHeader({ roomCreate: true })\n    );\n  }\n  /**\n   * Update metadata of a room\n   * @param room - name of the room\n   * @param metadata - the new metadata for the room\n   */\n  async updateRoomMetadata(room, metadata) {\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateRoomMetadata\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateRoomMetadataRequest({ room, metadata }).toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * List participants in a room\n   * @param room - name of the room\n   */\n  async listParticipants(room) {\n    const data = await this.rpc.request(\n      svc,\n      \"ListParticipants\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListParticipantsRequest({ room }).toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n    const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListParticipantsResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.participants ?? [];\n  }\n  /**\n   * Get information on a specific participant, including the tracks that participant\n   * has published\n   * @param room - name of the room\n   * @param identity - identity of the participant to return\n   */\n  async getParticipant(room, identity) {\n    const data = await this.rpc.request(\n      svc,\n      \"GetParticipant\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomParticipantIdentity({ room, identity }).toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Removes a participant in the room. This will disconnect the participant\n   * and will emit a Disconnected event for that participant.\n   * Even after being removed, the participant can still re-join the room.\n   * @param room -\n   * @param identity -\n   */\n  async removeParticipant(room, identity) {\n    await this.rpc.request(\n      svc,\n      \"RemoveParticipant\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomParticipantIdentity({ room, identity }).toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n  }\n  /**\n   * Mutes a track that the participant has published.\n   * @param room -\n   * @param identity -\n   * @param trackSid - sid of the track to be muted\n   * @param muted - true to mute, false to unmute\n   */\n  async mutePublishedTrack(room, identity, trackSid, muted) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.MuteRoomTrackRequest({\n      room,\n      identity,\n      trackSid,\n      muted\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"MutePublishedTrack\",\n      req,\n      await this.authHeader({ roomAdmin: true, room })\n    );\n    const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.MuteRoomTrackResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.track;\n  }\n  async updateParticipant(room, identity, metadataOrOptions, maybePermission, maybeName) {\n    const hasOptions = typeof metadataOrOptions === \"object\";\n    const metadata = hasOptions ? metadataOrOptions == null ? void 0 : metadataOrOptions.metadata : metadataOrOptions;\n    const permission = hasOptions ? metadataOrOptions.permission : maybePermission;\n    const name = hasOptions ? metadataOrOptions.name : maybeName;\n    const attributes = hasOptions ? metadataOrOptions.attributes : {};\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateParticipantRequest({\n      room,\n      identity,\n      attributes,\n      metadata,\n      name\n    });\n    if (permission) {\n      req.permission = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantPermission(permission);\n    }\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateParticipant\",\n      req.toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Updates a participant's subscription to tracks\n   * @param room -\n   * @param identity -\n   * @param trackSids -\n   * @param subscribe - true to subscribe, false to unsubscribe\n   */\n  async updateSubscriptions(room, identity, trackSids, subscribe) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateSubscriptionsRequest({\n      room,\n      identity,\n      trackSids,\n      subscribe,\n      participantTracks: []\n    }).toJson();\n    await this.rpc.request(\n      svc,\n      \"UpdateSubscriptions\",\n      req,\n      await this.authHeader({ roomAdmin: true, room })\n    );\n  }\n  async sendData(room, data, kind, options = {}) {\n    const destinationSids = Array.isArray(options) ? options : options.destinationSids;\n    const topic = Array.isArray(options) ? void 0 : options.topic;\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SendDataRequest({\n      room,\n      data,\n      kind,\n      destinationSids: destinationSids ?? [],\n      topic\n    });\n    if (!Array.isArray(options) && options.destinationIdentities) {\n      req.destinationIdentities = options.destinationIdentities;\n    }\n    req.nonce = await (0,_crypto_uuid_js__WEBPACK_IMPORTED_MODULE_3__.getRandomBytes)(16);\n    await this.rpc.request(\n      svc,\n      \"SendData\",\n      req.toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n  }\n}\n\n//# sourceMappingURL=RoomServiceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvUm9vbVNlcnZpY2VDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFpQjJCO0FBQ29CO0FBQ1U7QUFDUDtBQUNsRDtBQUNBLGdDQUFnQyx3REFBVztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGtEQUFRLE9BQU8sd0RBQWM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0VBQWlCO0FBQzNCLDhCQUE4QixrQkFBa0I7QUFDaEQ7QUFDQSxXQUFXLG1EQUFJLGtCQUFrQiwyQkFBMkI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsK0RBQWdCLEdBQUcsb0JBQW9CO0FBQ2pELDhCQUE4QixnQkFBZ0I7QUFDOUM7QUFDQSxnQkFBZ0IsZ0VBQWlCLGtCQUFrQiwyQkFBMkI7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxnRUFBaUIsR0FBRyxNQUFNO0FBQ3BDLDhCQUE4QixrQkFBa0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsd0VBQXlCLEdBQUcsZ0JBQWdCO0FBQ3RELDhCQUE4Qix1QkFBdUI7QUFDckQ7QUFDQSxXQUFXLG1EQUFJLGtCQUFrQiwyQkFBMkI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxzRUFBdUIsR0FBRyxNQUFNO0FBQzFDLDhCQUE4Qix1QkFBdUI7QUFDckQ7QUFDQSxnQkFBZ0IsdUVBQXdCLGtCQUFrQiwyQkFBMkI7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxzRUFBdUIsR0FBRyxnQkFBZ0I7QUFDcEQsOEJBQThCLHVCQUF1QjtBQUNyRDtBQUNBLFdBQVcsOERBQWUsa0JBQWtCLDJCQUEyQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLHNFQUF1QixHQUFHLGdCQUFnQjtBQUNwRCw4QkFBOEIsdUJBQXVCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1FQUFvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix1QkFBdUI7QUFDckQ7QUFDQSxnQkFBZ0Isb0VBQXFCLGtCQUFrQiwyQkFBMkI7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix1RUFBd0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJCQUEyQixvRUFBcUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix1QkFBdUI7QUFDckQ7QUFDQSxXQUFXLDhEQUFlLGtCQUFrQiwyQkFBMkI7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHlFQUEwQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHVCQUF1QjtBQUNyRDtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQSxvQkFBb0IsOERBQWU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsK0RBQWM7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsdUJBQXVCO0FBQ3JEO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92b2ljZS1hc3Npc3RhbnQyLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xpdmVraXQtc2VydmVyLXNka0AyLjEwLjEvbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L1Jvb21TZXJ2aWNlQ2xpZW50LmpzPzJkYWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ3JlYXRlUm9vbVJlcXVlc3QsXG4gIERlbGV0ZVJvb21SZXF1ZXN0LFxuICBMaXN0UGFydGljaXBhbnRzUmVxdWVzdCxcbiAgTGlzdFBhcnRpY2lwYW50c1Jlc3BvbnNlLFxuICBMaXN0Um9vbXNSZXF1ZXN0LFxuICBMaXN0Um9vbXNSZXNwb25zZSxcbiAgTXV0ZVJvb21UcmFja1JlcXVlc3QsXG4gIE11dGVSb29tVHJhY2tSZXNwb25zZSxcbiAgUGFydGljaXBhbnRJbmZvLFxuICBQYXJ0aWNpcGFudFBlcm1pc3Npb24sXG4gIFJvb20sXG4gIFJvb21QYXJ0aWNpcGFudElkZW50aXR5LFxuICBTZW5kRGF0YVJlcXVlc3QsXG4gIFVwZGF0ZVBhcnRpY2lwYW50UmVxdWVzdCxcbiAgVXBkYXRlUm9vbU1ldGFkYXRhUmVxdWVzdCxcbiAgVXBkYXRlU3Vic2NyaXB0aW9uc1JlcXVlc3Rcbn0gZnJvbSBcIkBsaXZla2l0L3Byb3RvY29sXCI7XG5pbXBvcnQgeyBTZXJ2aWNlQmFzZSB9IGZyb20gXCIuL1NlcnZpY2VCYXNlLmpzXCI7XG5pbXBvcnQgeyBUd2lycFJwYywgbGl2ZWtpdFBhY2thZ2UgfSBmcm9tIFwiLi9Ud2lycFJQQy5qc1wiO1xuaW1wb3J0IHsgZ2V0UmFuZG9tQnl0ZXMgfSBmcm9tIFwiLi9jcnlwdG8vdXVpZC5qc1wiO1xuY29uc3Qgc3ZjID0gXCJSb29tU2VydmljZVwiO1xuY2xhc3MgUm9vbVNlcnZpY2VDbGllbnQgZXh0ZW5kcyBTZXJ2aWNlQmFzZSB7XG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0gaG9zdCAtIGhvc3RuYW1lIGluY2x1ZGluZyBwcm90b2NvbC4gaS5lLiAnaHR0cHM6Ly88cHJvamVjdD4ubGl2ZWtpdC5jbG91ZCdcbiAgICogQHBhcmFtIGFwaUtleSAtIEFQSSBLZXksIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9LRVlcbiAgICogQHBhcmFtIHNlY3JldCAtIEFQSSBTZWNyZXQsIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9TRUNSRVRcbiAgICovXG4gIGNvbnN0cnVjdG9yKGhvc3QsIGFwaUtleSwgc2VjcmV0KSB7XG4gICAgc3VwZXIoYXBpS2V5LCBzZWNyZXQpO1xuICAgIHRoaXMucnBjID0gbmV3IFR3aXJwUnBjKGhvc3QsIGxpdmVraXRQYWNrYWdlKTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyByb29tLiBFeHBsaWNpdCByb29tIGNyZWF0aW9uIGlzIG5vdCByZXF1aXJlZCwgc2luY2Ugcm9vbXMgd2lsbFxuICAgKiBiZSBhdXRvbWF0aWNhbGx5IGNyZWF0ZWQgd2hlbiB0aGUgZmlyc3QgcGFydGljaXBhbnQgam9pbnMuIFRoaXMgbWV0aG9kIGNhbiBiZVxuICAgKiB1c2VkIHRvIGN1c3RvbWl6ZSByb29tIHNldHRpbmdzLlxuICAgKiBAcGFyYW0gb3B0aW9ucyAtXG4gICAqL1xuICBhc3luYyBjcmVhdGVSb29tKG9wdGlvbnMpIHtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChcbiAgICAgIHN2YyxcbiAgICAgIFwiQ3JlYXRlUm9vbVwiLFxuICAgICAgbmV3IENyZWF0ZVJvb21SZXF1ZXN0KG9wdGlvbnMpLnRvSnNvbigpLFxuICAgICAgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHsgcm9vbUNyZWF0ZTogdHJ1ZSB9KVxuICAgICk7XG4gICAgcmV0dXJuIFJvb20uZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICB9XG4gIC8qKlxuICAgKiBMaXN0IGFjdGl2ZSByb29tc1xuICAgKiBAcGFyYW0gbmFtZXMgLSB3aGVuIHVuZGVmaW5lZCBvciBlbXB0eSwgbGlzdCBhbGwgcm9vbXMuXG4gICAqICAgICAgICAgICAgICAgIG90aGVyd2lzZSByZXR1cm5zIHJvb21zIHdpdGggbWF0Y2hpbmcgbmFtZXNcbiAgICogQHJldHVybnNcbiAgICovXG4gIGFzeW5jIGxpc3RSb29tcyhuYW1lcykge1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KFxuICAgICAgc3ZjLFxuICAgICAgXCJMaXN0Um9vbXNcIixcbiAgICAgIG5ldyBMaXN0Um9vbXNSZXF1ZXN0KHsgbmFtZXM6IG5hbWVzID8/IFtdIH0pLnRvSnNvbigpLFxuICAgICAgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHsgcm9vbUxpc3Q6IHRydWUgfSlcbiAgICApO1xuICAgIGNvbnN0IHJlcyA9IExpc3RSb29tc1Jlc3BvbnNlLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgICByZXR1cm4gcmVzLnJvb21zID8/IFtdO1xuICB9XG4gIGFzeW5jIGRlbGV0ZVJvb20ocm9vbSkge1xuICAgIGF3YWl0IHRoaXMucnBjLnJlcXVlc3QoXG4gICAgICBzdmMsXG4gICAgICBcIkRlbGV0ZVJvb21cIixcbiAgICAgIG5ldyBEZWxldGVSb29tUmVxdWVzdCh7IHJvb20gfSkudG9Kc29uKCksXG4gICAgICBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyByb29tQ3JlYXRlOiB0cnVlIH0pXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogVXBkYXRlIG1ldGFkYXRhIG9mIGEgcm9vbVxuICAgKiBAcGFyYW0gcm9vbSAtIG5hbWUgb2YgdGhlIHJvb21cbiAgICogQHBhcmFtIG1ldGFkYXRhIC0gdGhlIG5ldyBtZXRhZGF0YSBmb3IgdGhlIHJvb21cbiAgICovXG4gIGFzeW5jIHVwZGF0ZVJvb21NZXRhZGF0YShyb29tLCBtZXRhZGF0YSkge1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KFxuICAgICAgc3ZjLFxuICAgICAgXCJVcGRhdGVSb29tTWV0YWRhdGFcIixcbiAgICAgIG5ldyBVcGRhdGVSb29tTWV0YWRhdGFSZXF1ZXN0KHsgcm9vbSwgbWV0YWRhdGEgfSkudG9Kc29uKCksXG4gICAgICBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyByb29tQWRtaW46IHRydWUsIHJvb20gfSlcbiAgICApO1xuICAgIHJldHVybiBSb29tLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgfVxuICAvKipcbiAgICogTGlzdCBwYXJ0aWNpcGFudHMgaW4gYSByb29tXG4gICAqIEBwYXJhbSByb29tIC0gbmFtZSBvZiB0aGUgcm9vbVxuICAgKi9cbiAgYXN5bmMgbGlzdFBhcnRpY2lwYW50cyhyb29tKSB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3QoXG4gICAgICBzdmMsXG4gICAgICBcIkxpc3RQYXJ0aWNpcGFudHNcIixcbiAgICAgIG5ldyBMaXN0UGFydGljaXBhbnRzUmVxdWVzdCh7IHJvb20gfSkudG9Kc29uKCksXG4gICAgICBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyByb29tQWRtaW46IHRydWUsIHJvb20gfSlcbiAgICApO1xuICAgIGNvbnN0IHJlcyA9IExpc3RQYXJ0aWNpcGFudHNSZXNwb25zZS5mcm9tSnNvbihkYXRhLCB7IGlnbm9yZVVua25vd25GaWVsZHM6IHRydWUgfSk7XG4gICAgcmV0dXJuIHJlcy5wYXJ0aWNpcGFudHMgPz8gW107XG4gIH1cbiAgLyoqXG4gICAqIEdldCBpbmZvcm1hdGlvbiBvbiBhIHNwZWNpZmljIHBhcnRpY2lwYW50LCBpbmNsdWRpbmcgdGhlIHRyYWNrcyB0aGF0IHBhcnRpY2lwYW50XG4gICAqIGhhcyBwdWJsaXNoZWRcbiAgICogQHBhcmFtIHJvb20gLSBuYW1lIG9mIHRoZSByb29tXG4gICAqIEBwYXJhbSBpZGVudGl0eSAtIGlkZW50aXR5IG9mIHRoZSBwYXJ0aWNpcGFudCB0byByZXR1cm5cbiAgICovXG4gIGFzeW5jIGdldFBhcnRpY2lwYW50KHJvb20sIGlkZW50aXR5KSB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3QoXG4gICAgICBzdmMsXG4gICAgICBcIkdldFBhcnRpY2lwYW50XCIsXG4gICAgICBuZXcgUm9vbVBhcnRpY2lwYW50SWRlbnRpdHkoeyByb29tLCBpZGVudGl0eSB9KS50b0pzb24oKSxcbiAgICAgIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IHJvb21BZG1pbjogdHJ1ZSwgcm9vbSB9KVxuICAgICk7XG4gICAgcmV0dXJuIFBhcnRpY2lwYW50SW5mby5mcm9tSnNvbihkYXRhLCB7IGlnbm9yZVVua25vd25GaWVsZHM6IHRydWUgfSk7XG4gIH1cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBwYXJ0aWNpcGFudCBpbiB0aGUgcm9vbS4gVGhpcyB3aWxsIGRpc2Nvbm5lY3QgdGhlIHBhcnRpY2lwYW50XG4gICAqIGFuZCB3aWxsIGVtaXQgYSBEaXNjb25uZWN0ZWQgZXZlbnQgZm9yIHRoYXQgcGFydGljaXBhbnQuXG4gICAqIEV2ZW4gYWZ0ZXIgYmVpbmcgcmVtb3ZlZCwgdGhlIHBhcnRpY2lwYW50IGNhbiBzdGlsbCByZS1qb2luIHRoZSByb29tLlxuICAgKiBAcGFyYW0gcm9vbSAtXG4gICAqIEBwYXJhbSBpZGVudGl0eSAtXG4gICAqL1xuICBhc3luYyByZW1vdmVQYXJ0aWNpcGFudChyb29tLCBpZGVudGl0eSkge1xuICAgIGF3YWl0IHRoaXMucnBjLnJlcXVlc3QoXG4gICAgICBzdmMsXG4gICAgICBcIlJlbW92ZVBhcnRpY2lwYW50XCIsXG4gICAgICBuZXcgUm9vbVBhcnRpY2lwYW50SWRlbnRpdHkoeyByb29tLCBpZGVudGl0eSB9KS50b0pzb24oKSxcbiAgICAgIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IHJvb21BZG1pbjogdHJ1ZSwgcm9vbSB9KVxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIE11dGVzIGEgdHJhY2sgdGhhdCB0aGUgcGFydGljaXBhbnQgaGFzIHB1Ymxpc2hlZC5cbiAgICogQHBhcmFtIHJvb20gLVxuICAgKiBAcGFyYW0gaWRlbnRpdHkgLVxuICAgKiBAcGFyYW0gdHJhY2tTaWQgLSBzaWQgb2YgdGhlIHRyYWNrIHRvIGJlIG11dGVkXG4gICAqIEBwYXJhbSBtdXRlZCAtIHRydWUgdG8gbXV0ZSwgZmFsc2UgdG8gdW5tdXRlXG4gICAqL1xuICBhc3luYyBtdXRlUHVibGlzaGVkVHJhY2socm9vbSwgaWRlbnRpdHksIHRyYWNrU2lkLCBtdXRlZCkge1xuICAgIGNvbnN0IHJlcSA9IG5ldyBNdXRlUm9vbVRyYWNrUmVxdWVzdCh7XG4gICAgICByb29tLFxuICAgICAgaWRlbnRpdHksXG4gICAgICB0cmFja1NpZCxcbiAgICAgIG11dGVkXG4gICAgfSkudG9Kc29uKCk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3QoXG4gICAgICBzdmMsXG4gICAgICBcIk11dGVQdWJsaXNoZWRUcmFja1wiLFxuICAgICAgcmVxLFxuICAgICAgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHsgcm9vbUFkbWluOiB0cnVlLCByb29tIH0pXG4gICAgKTtcbiAgICBjb25zdCByZXMgPSBNdXRlUm9vbVRyYWNrUmVzcG9uc2UuZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICAgIHJldHVybiByZXMudHJhY2s7XG4gIH1cbiAgYXN5bmMgdXBkYXRlUGFydGljaXBhbnQocm9vbSwgaWRlbnRpdHksIG1ldGFkYXRhT3JPcHRpb25zLCBtYXliZVBlcm1pc3Npb24sIG1heWJlTmFtZSkge1xuICAgIGNvbnN0IGhhc09wdGlvbnMgPSB0eXBlb2YgbWV0YWRhdGFPck9wdGlvbnMgPT09IFwib2JqZWN0XCI7XG4gICAgY29uc3QgbWV0YWRhdGEgPSBoYXNPcHRpb25zID8gbWV0YWRhdGFPck9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG1ldGFkYXRhT3JPcHRpb25zLm1ldGFkYXRhIDogbWV0YWRhdGFPck9wdGlvbnM7XG4gICAgY29uc3QgcGVybWlzc2lvbiA9IGhhc09wdGlvbnMgPyBtZXRhZGF0YU9yT3B0aW9ucy5wZXJtaXNzaW9uIDogbWF5YmVQZXJtaXNzaW9uO1xuICAgIGNvbnN0IG5hbWUgPSBoYXNPcHRpb25zID8gbWV0YWRhdGFPck9wdGlvbnMubmFtZSA6IG1heWJlTmFtZTtcbiAgICBjb25zdCBhdHRyaWJ1dGVzID0gaGFzT3B0aW9ucyA/IG1ldGFkYXRhT3JPcHRpb25zLmF0dHJpYnV0ZXMgOiB7fTtcbiAgICBjb25zdCByZXEgPSBuZXcgVXBkYXRlUGFydGljaXBhbnRSZXF1ZXN0KHtcbiAgICAgIHJvb20sXG4gICAgICBpZGVudGl0eSxcbiAgICAgIGF0dHJpYnV0ZXMsXG4gICAgICBtZXRhZGF0YSxcbiAgICAgIG5hbWVcbiAgICB9KTtcbiAgICBpZiAocGVybWlzc2lvbikge1xuICAgICAgcmVxLnBlcm1pc3Npb24gPSBuZXcgUGFydGljaXBhbnRQZXJtaXNzaW9uKHBlcm1pc3Npb24pO1xuICAgIH1cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChcbiAgICAgIHN2YyxcbiAgICAgIFwiVXBkYXRlUGFydGljaXBhbnRcIixcbiAgICAgIHJlcS50b0pzb24oKSxcbiAgICAgIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IHJvb21BZG1pbjogdHJ1ZSwgcm9vbSB9KVxuICAgICk7XG4gICAgcmV0dXJuIFBhcnRpY2lwYW50SW5mby5mcm9tSnNvbihkYXRhLCB7IGlnbm9yZVVua25vd25GaWVsZHM6IHRydWUgfSk7XG4gIH1cbiAgLyoqXG4gICAqIFVwZGF0ZXMgYSBwYXJ0aWNpcGFudCdzIHN1YnNjcmlwdGlvbiB0byB0cmFja3NcbiAgICogQHBhcmFtIHJvb20gLVxuICAgKiBAcGFyYW0gaWRlbnRpdHkgLVxuICAgKiBAcGFyYW0gdHJhY2tTaWRzIC1cbiAgICogQHBhcmFtIHN1YnNjcmliZSAtIHRydWUgdG8gc3Vic2NyaWJlLCBmYWxzZSB0byB1bnN1YnNjcmliZVxuICAgKi9cbiAgYXN5bmMgdXBkYXRlU3Vic2NyaXB0aW9ucyhyb29tLCBpZGVudGl0eSwgdHJhY2tTaWRzLCBzdWJzY3JpYmUpIHtcbiAgICBjb25zdCByZXEgPSBuZXcgVXBkYXRlU3Vic2NyaXB0aW9uc1JlcXVlc3Qoe1xuICAgICAgcm9vbSxcbiAgICAgIGlkZW50aXR5LFxuICAgICAgdHJhY2tTaWRzLFxuICAgICAgc3Vic2NyaWJlLFxuICAgICAgcGFydGljaXBhbnRUcmFja3M6IFtdXG4gICAgfSkudG9Kc29uKCk7XG4gICAgYXdhaXQgdGhpcy5ycGMucmVxdWVzdChcbiAgICAgIHN2YyxcbiAgICAgIFwiVXBkYXRlU3Vic2NyaXB0aW9uc1wiLFxuICAgICAgcmVxLFxuICAgICAgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHsgcm9vbUFkbWluOiB0cnVlLCByb29tIH0pXG4gICAgKTtcbiAgfVxuICBhc3luYyBzZW5kRGF0YShyb29tLCBkYXRhLCBraW5kLCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCBkZXN0aW5hdGlvblNpZHMgPSBBcnJheS5pc0FycmF5KG9wdGlvbnMpID8gb3B0aW9ucyA6IG9wdGlvbnMuZGVzdGluYXRpb25TaWRzO1xuICAgIGNvbnN0IHRvcGljID0gQXJyYXkuaXNBcnJheShvcHRpb25zKSA/IHZvaWQgMCA6IG9wdGlvbnMudG9waWM7XG4gICAgY29uc3QgcmVxID0gbmV3IFNlbmREYXRhUmVxdWVzdCh7XG4gICAgICByb29tLFxuICAgICAgZGF0YSxcbiAgICAgIGtpbmQsXG4gICAgICBkZXN0aW5hdGlvblNpZHM6IGRlc3RpbmF0aW9uU2lkcyA/PyBbXSxcbiAgICAgIHRvcGljXG4gICAgfSk7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KG9wdGlvbnMpICYmIG9wdGlvbnMuZGVzdGluYXRpb25JZGVudGl0aWVzKSB7XG4gICAgICByZXEuZGVzdGluYXRpb25JZGVudGl0aWVzID0gb3B0aW9ucy5kZXN0aW5hdGlvbklkZW50aXRpZXM7XG4gICAgfVxuICAgIHJlcS5ub25jZSA9IGF3YWl0IGdldFJhbmRvbUJ5dGVzKDE2KTtcbiAgICBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KFxuICAgICAgc3ZjLFxuICAgICAgXCJTZW5kRGF0YVwiLFxuICAgICAgcmVxLnRvSnNvbigpLFxuICAgICAgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHsgcm9vbUFkbWluOiB0cnVlLCByb29tIH0pXG4gICAgKTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgUm9vbVNlcnZpY2VDbGllbnRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Sb29tU2VydmljZUNsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/RoomServiceClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/ServiceBase.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/ServiceBase.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServiceBase: () => (/* binding */ ServiceBase)\n/* harmony export */ });\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/AccessToken.js\");\n\nclass ServiceBase {\n  /**\n   * @param apiKey - API Key.\n   * @param secret - API Secret.\n   * @param ttl - token TTL\n   */\n  constructor(apiKey, secret, ttl) {\n    this.apiKey = apiKey;\n    this.secret = secret;\n    this.ttl = ttl || \"10m\";\n  }\n  async authHeader(grant, sip) {\n    const at = new _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__.AccessToken(this.apiKey, this.secret, { ttl: this.ttl });\n    if (grant) {\n      at.addGrant(grant);\n    }\n    if (sip) {\n      at.addSIPGrant(sip);\n    }\n    return {\n      Authorization: `Bearer ${await at.toJwt()}`\n    };\n  }\n}\n\n//# sourceMappingURL=ServiceBase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvU2VydmljZUJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdEQUFXLDZCQUE2QixlQUFlO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGlCQUFpQjtBQUNoRDtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdm9pY2UtYXNzaXN0YW50Mi8uL25vZGVfbW9kdWxlcy8ucG5wbS9saXZla2l0LXNlcnZlci1zZGtAMi4xMC4xL25vZGVfbW9kdWxlcy9saXZla2l0LXNlcnZlci1zZGsvZGlzdC9TZXJ2aWNlQmFzZS5qcz8xYmEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjY2Vzc1Rva2VuIH0gZnJvbSBcIi4vQWNjZXNzVG9rZW4uanNcIjtcbmNsYXNzIFNlcnZpY2VCYXNlIHtcbiAgLyoqXG4gICAqIEBwYXJhbSBhcGlLZXkgLSBBUEkgS2V5LlxuICAgKiBAcGFyYW0gc2VjcmV0IC0gQVBJIFNlY3JldC5cbiAgICogQHBhcmFtIHR0bCAtIHRva2VuIFRUTFxuICAgKi9cbiAgY29uc3RydWN0b3IoYXBpS2V5LCBzZWNyZXQsIHR0bCkge1xuICAgIHRoaXMuYXBpS2V5ID0gYXBpS2V5O1xuICAgIHRoaXMuc2VjcmV0ID0gc2VjcmV0O1xuICAgIHRoaXMudHRsID0gdHRsIHx8IFwiMTBtXCI7XG4gIH1cbiAgYXN5bmMgYXV0aEhlYWRlcihncmFudCwgc2lwKSB7XG4gICAgY29uc3QgYXQgPSBuZXcgQWNjZXNzVG9rZW4odGhpcy5hcGlLZXksIHRoaXMuc2VjcmV0LCB7IHR0bDogdGhpcy50dGwgfSk7XG4gICAgaWYgKGdyYW50KSB7XG4gICAgICBhdC5hZGRHcmFudChncmFudCk7XG4gICAgfVxuICAgIGlmIChzaXApIHtcbiAgICAgIGF0LmFkZFNJUEdyYW50KHNpcCk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YXdhaXQgYXQudG9Kd3QoKX1gXG4gICAgfTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgU2VydmljZUJhc2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJ2aWNlQmFzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/ServiceBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/SipClient.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/SipClient.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SipClient: () => (/* binding */ SipClient)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/.pnpm/@bufbuild+protobuf@1.10.0/node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/duration_pb.js\");\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.33.0/node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\n\nconst svc = \"SIP\";\nclass SipClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__.ServiceBase {\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host, apiKey, secret) {\n    super(apiKey, secret);\n    this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n  }\n  /**\n   * @param number - phone number of the trunk\n   * @param opts - CreateSipTrunkOptions\n   * @deprecated use `createSipInboundTrunk` or `createSipOutboundTrunk`\n   */\n  async createSipTrunk(number, opts) {\n    let inboundAddresses;\n    let inboundNumbers;\n    let inboundUsername = \"\";\n    let inboundPassword = \"\";\n    let outboundAddress = \"\";\n    let outboundUsername = \"\";\n    let outboundPassword = \"\";\n    let name = \"\";\n    let metadata = \"\";\n    if (opts !== void 0) {\n      inboundAddresses = opts.inbound_addresses;\n      inboundNumbers = opts.inbound_numbers;\n      inboundUsername = opts.inbound_username || \"\";\n      inboundPassword = opts.inbound_password || \"\";\n      outboundAddress = opts.outbound_address || \"\";\n      outboundUsername = opts.outbound_username || \"\";\n      outboundPassword = opts.outbound_password || \"\";\n      name = opts.name || \"\";\n      metadata = opts.metadata || \"\";\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPTrunkRequest({\n      name,\n      metadata,\n      inboundAddresses,\n      inboundNumbers,\n      inboundUsername,\n      inboundPassword,\n      outboundNumber: number,\n      outboundAddress,\n      outboundUsername,\n      outboundPassword\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateSIPTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param name - human-readable name of the trunk\n   * @param numbers - phone numbers of the trunk\n   * @param opts - CreateSipTrunkOptions\n   */\n  async createSipInboundTrunk(name, numbers, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPInboundTrunkRequest({\n      trunk: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPInboundTrunkInfo({\n        name,\n        numbers,\n        metadata: opts == null ? void 0 : opts.metadata,\n        allowedAddresses: opts.allowedAddresses ?? opts.allowed_addresses,\n        allowedNumbers: opts.allowedNumbers ?? opts.allowed_numbers,\n        authUsername: opts.authUsername ?? opts.auth_username,\n        authPassword: opts.authPassword ?? opts.auth_password,\n        headers: opts.headers,\n        headersToAttributes: opts.headersToAttributes,\n        includeHeaders: opts.includeHeaders,\n        krispEnabled: opts.krispEnabled\n      })\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateSIPInboundTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPInboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param name - human-readable name of the trunk\n   * @param address - hostname and port of the SIP server to dial\n   * @param numbers - phone numbers of the trunk\n   * @param opts - CreateSipTrunkOptions\n   */\n  async createSipOutboundTrunk(name, address, numbers, opts) {\n    if (opts === void 0) {\n      opts = {\n        transport: _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTransport.SIP_TRANSPORT_AUTO\n      };\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPOutboundTrunkRequest({\n      trunk: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPOutboundTrunkInfo({\n        name,\n        address,\n        numbers,\n        metadata: opts.metadata,\n        transport: opts.transport,\n        authUsername: opts.authUsername ?? opts.auth_username,\n        authPassword: opts.authPassword ?? opts.auth_password,\n        headers: opts.headers,\n        headersToAttributes: opts.headersToAttributes,\n        includeHeaders: opts.includeHeaders\n      })\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateSIPOutboundTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPOutboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @deprecated use `listSipInboundTrunk` or `listSipOutboundTrunk`\n   */\n  async listSipTrunk() {\n    const req = {};\n    const data = await this.rpc.request(\n      svc,\n      \"ListSIPTrunk\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPTrunkRequest(req).toJson(),\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  async listSipInboundTrunk() {\n    const req = {};\n    const data = await this.rpc.request(\n      svc,\n      \"ListSIPInboundTrunk\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPInboundTrunkRequest(req).toJson(),\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPInboundTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  async listSipOutboundTrunk() {\n    const req = {};\n    const data = await this.rpc.request(\n      svc,\n      \"ListSIPOutboundTrunk\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPOutboundTrunkRequest(req).toJson(),\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPOutboundTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  /**\n   * @param sipTrunkId - sip trunk to delete\n   */\n  async deleteSipTrunk(sipTrunkId) {\n    const data = await this.rpc.request(\n      svc,\n      \"DeleteSIPTrunk\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteSIPTrunkRequest({ sipTrunkId }).toJson(),\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param rule - sip dispatch rule\n   * @param opts - CreateSipDispatchRuleOptions\n   */\n  async createSipDispatchRule(rule, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let ruleProto = void 0;\n    if (rule.type == \"direct\") {\n      ruleProto = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRule({\n        rule: {\n          case: \"dispatchRuleDirect\",\n          value: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleDirect({\n            roomName: rule.roomName,\n            pin: rule.pin || \"\"\n          })\n        }\n      });\n    } else if (rule.type == \"individual\") {\n      ruleProto = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRule({\n        rule: {\n          case: \"dispatchRuleIndividual\",\n          value: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleIndividual({\n            roomPrefix: rule.roomPrefix,\n            pin: rule.pin || \"\"\n          })\n        }\n      });\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPDispatchRuleRequest({\n      rule: ruleProto,\n      trunkIds: opts.trunkIds,\n      hidePhoneNumber: opts.hidePhoneNumber,\n      name: opts.name,\n      metadata: opts.metadata,\n      attributes: opts.attributes,\n      roomPreset: opts.roomPreset,\n      roomConfig: opts.roomConfig\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateSIPDispatchRule\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  async listSipDispatchRule() {\n    const req = {};\n    const data = await this.rpc.request(\n      svc,\n      \"ListSIPDispatchRule\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPDispatchRuleRequest(req).toJson(),\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPDispatchRuleResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  /**\n   * @param sipDispatchRuleId - sip trunk to delete\n   */\n  async deleteSipDispatchRule(sipDispatchRuleId) {\n    const data = await this.rpc.request(\n      svc,\n      \"DeleteSIPDispatchRule\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteSIPDispatchRuleRequest({ sipDispatchRuleId }).toJson(),\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param sipTrunkId - sip trunk to use for the call\n   * @param number - number to dial\n   * @param roomName - room to attach the call to\n   * @param opts - CreateSipParticipantOptions\n   */\n  async createSipParticipant(sipTrunkId, number, roomName, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPParticipantRequest({\n      sipTrunkId,\n      sipCallTo: number,\n      roomName,\n      participantIdentity: opts.participantIdentity || \"sip-participant\",\n      participantName: opts.participantName,\n      participantMetadata: opts.participantMetadata,\n      dtmf: opts.dtmf,\n      playDialtone: opts.playDialtone ?? opts.playRingtone,\n      headers: opts.headers,\n      hidePhoneNumber: opts.hidePhoneNumber,\n      includeHeaders: opts.includeHeaders,\n      ringingTimeout: opts.ringingTimeout ? new _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.Duration({ seconds: BigInt(opts.ringingTimeout) }) : void 0,\n      maxCallDuration: opts.maxCallDuration ? new _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.Duration({ seconds: BigInt(opts.maxCallDuration) }) : void 0,\n      krispEnabled: opts.krispEnabled\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateSIPParticipant\",\n      req,\n      await this.authHeader({}, { call: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param roomName - room the SIP participant to transfer is connectd to\n   * @param participantIdentity - identity of the SIP participant to transfer\n   * @param transferTo - SIP URL to transfer the participant to\n   */\n  async transferSipParticipant(roomName, participantIdentity, transferTo, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TransferSIPParticipantRequest({\n      participantIdentity,\n      roomName,\n      transferTo,\n      playDialtone: opts.playDialtone,\n      headers: opts.headers\n    }).toJson();\n    await this.rpc.request(\n      svc,\n      \"TransferSIPParticipant\",\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName }, { call: true })\n    );\n  }\n}\n\n//# sourceMappingURL=SipClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/SipClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/TwirpRPC.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/TwirpRPC.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwirpError: () => (/* binding */ TwirpError),\n/* harmony export */   TwirpRpc: () => (/* binding */ TwirpRpc),\n/* harmony export */   livekitPackage: () => (/* binding */ livekitPackage)\n/* harmony export */ });\nconst defaultPrefix = \"/twirp\";\nconst livekitPackage = \"livekit\";\nclass TwirpError extends Error {\n  constructor(name, message, status, code) {\n    super(message);\n    this.name = name;\n    this.status = status;\n    this.code = code;\n  }\n}\nclass TwirpRpc {\n  constructor(host, pkg, prefix) {\n    if (host.startsWith(\"ws\")) {\n      host = host.replace(\"ws\", \"http\");\n    }\n    this.host = host;\n    this.pkg = pkg;\n    this.prefix = prefix || defaultPrefix;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async request(service, method, data, headers) {\n    const path = `${this.prefix}/${this.pkg}.${service}/${method}`;\n    const url = new URL(path, this.host);\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        ...headers\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      const isJson = response.headers.get(\"content-type\") === \"application/json\";\n      let errorMessage = \"Unknown internal error\";\n      let errorCode = void 0;\n      try {\n        if (isJson) {\n          const parsedError = await response.json();\n          if (\"msg\" in parsedError) {\n            errorMessage = parsedError.msg;\n          }\n          if (\"code\" in parsedError) {\n            errorCode = parsedError.code;\n          }\n        } else {\n          errorMessage = await response.text();\n        }\n      } catch (e) {\n        console.debug(`Error when trying to parse error message, using defaults`, e);\n      }\n      throw new TwirpError(response.statusText, errorMessage, response.status, errorCode);\n    }\n    const parsedResp = await response.json();\n    const camelcaseKeys = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/quick-lru@6.1.2\"), __webpack_require__.e(\"vendor-chunks/map-obj@5.0.0\"), __webpack_require__.e(\"vendor-chunks/camelcase@8.0.0\"), __webpack_require__.e(\"vendor-chunks/camelcase-keys@9.1.3\")]).then(__webpack_require__.bind(__webpack_require__, /*! camelcase-keys */ \"(rsc)/./node_modules/.pnpm/camelcase-keys@9.1.3/node_modules/camelcase-keys/index.js\")).then((mod) => mod.default);\n    return camelcaseKeys(parsedResp, { deep: true });\n  }\n}\n\n//# sourceMappingURL=TwirpRPC.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvVHdpcnBSUEMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVksR0FBRyxTQUFTLEdBQUcsUUFBUSxHQUFHLE9BQU87QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGlhQUF3QjtBQUN4RCx1Q0FBdUMsWUFBWTtBQUNuRDtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3ZvaWNlLWFzc2lzdGFudDIvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvVHdpcnBSUEMuanM/ZTA2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZWZhdWx0UHJlZml4ID0gXCIvdHdpcnBcIjtcbmNvbnN0IGxpdmVraXRQYWNrYWdlID0gXCJsaXZla2l0XCI7XG5jbGFzcyBUd2lycEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihuYW1lLCBtZXNzYWdlLCBzdGF0dXMsIGNvZGUpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gIH1cbn1cbmNsYXNzIFR3aXJwUnBjIHtcbiAgY29uc3RydWN0b3IoaG9zdCwgcGtnLCBwcmVmaXgpIHtcbiAgICBpZiAoaG9zdC5zdGFydHNXaXRoKFwid3NcIikpIHtcbiAgICAgIGhvc3QgPSBob3N0LnJlcGxhY2UoXCJ3c1wiLCBcImh0dHBcIik7XG4gICAgfVxuICAgIHRoaXMuaG9zdCA9IGhvc3Q7XG4gICAgdGhpcy5wa2cgPSBwa2c7XG4gICAgdGhpcy5wcmVmaXggPSBwcmVmaXggfHwgZGVmYXVsdFByZWZpeDtcbiAgfVxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBhc3luYyByZXF1ZXN0KHNlcnZpY2UsIG1ldGhvZCwgZGF0YSwgaGVhZGVycykge1xuICAgIGNvbnN0IHBhdGggPSBgJHt0aGlzLnByZWZpeH0vJHt0aGlzLnBrZ30uJHtzZXJ2aWNlfS8ke21ldGhvZH1gO1xuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocGF0aCwgdGhpcy5ob3N0KTtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLThcIixcbiAgICAgICAgLi4uaGVhZGVyc1xuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpXG4gICAgfSk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgY29uc3QgaXNKc29uID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoXCJjb250ZW50LXR5cGVcIikgPT09IFwiYXBwbGljYXRpb24vanNvblwiO1xuICAgICAgbGV0IGVycm9yTWVzc2FnZSA9IFwiVW5rbm93biBpbnRlcm5hbCBlcnJvclwiO1xuICAgICAgbGV0IGVycm9yQ29kZSA9IHZvaWQgMDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmIChpc0pzb24pIHtcbiAgICAgICAgICBjb25zdCBwYXJzZWRFcnJvciA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICBpZiAoXCJtc2dcIiBpbiBwYXJzZWRFcnJvcikge1xuICAgICAgICAgICAgZXJyb3JNZXNzYWdlID0gcGFyc2VkRXJyb3IubXNnO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoXCJjb2RlXCIgaW4gcGFyc2VkRXJyb3IpIHtcbiAgICAgICAgICAgIGVycm9yQ29kZSA9IHBhcnNlZEVycm9yLmNvZGU7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGVycm9yTWVzc2FnZSA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmRlYnVnKGBFcnJvciB3aGVuIHRyeWluZyB0byBwYXJzZSBlcnJvciBtZXNzYWdlLCB1c2luZyBkZWZhdWx0c2AsIGUpO1xuICAgICAgfVxuICAgICAgdGhyb3cgbmV3IFR3aXJwRXJyb3IocmVzcG9uc2Uuc3RhdHVzVGV4dCwgZXJyb3JNZXNzYWdlLCByZXNwb25zZS5zdGF0dXMsIGVycm9yQ29kZSk7XG4gICAgfVxuICAgIGNvbnN0IHBhcnNlZFJlc3AgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgY29uc3QgY2FtZWxjYXNlS2V5cyA9IGF3YWl0IGltcG9ydChcImNhbWVsY2FzZS1rZXlzXCIpLnRoZW4oKG1vZCkgPT4gbW9kLmRlZmF1bHQpO1xuICAgIHJldHVybiBjYW1lbGNhc2VLZXlzKHBhcnNlZFJlc3AsIHsgZGVlcDogdHJ1ZSB9KTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgVHdpcnBFcnJvcixcbiAgVHdpcnBScGMsXG4gIGxpdmVraXRQYWNrYWdlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHdpcnBSUEMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/TwirpRPC.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/WebhookReceiver.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/WebhookReceiver.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebhookEvent: () => (/* binding */ WebhookEvent),\n/* harmony export */   WebhookReceiver: () => (/* binding */ WebhookReceiver),\n/* harmony export */   authorizeHeader: () => (/* binding */ authorizeHeader)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.33.0/node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/AccessToken.js\");\n/* harmony import */ var _crypto_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./crypto/digest.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/crypto/digest.js\");\n\n\n\nconst authorizeHeader = \"Authorize\";\nclass WebhookEvent extends _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebhookEvent {\n  constructor() {\n    super(...arguments);\n    this.event = \"\";\n  }\n  static fromBinary(bytes, options) {\n    return new WebhookEvent().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new WebhookEvent().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new WebhookEvent().fromJsonString(jsonString, options);\n  }\n}\nclass WebhookReceiver {\n  constructor(apiKey, apiSecret) {\n    this.verifier = new _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.TokenVerifier(apiKey, apiSecret);\n  }\n  /**\n   * @param body - string of the posted body\n   * @param authHeader - `Authorization` header from the request\n   * @param skipAuth - true to skip auth validation\n   * @returns\n   */\n  async receive(body, authHeader, skipAuth = false) {\n    if (!skipAuth) {\n      if (!authHeader) {\n        throw new Error(\"authorization header is empty\");\n      }\n      const claims = await this.verifier.verify(authHeader);\n      const hash = await (0,_crypto_digest_js__WEBPACK_IMPORTED_MODULE_2__.digest)(body);\n      const hashDecoded = btoa(\n        Array.from(new Uint8Array(hash)).map((v) => String.fromCharCode(v)).join(\"\")\n      );\n      if (claims.sha256 !== hashDecoded) {\n        throw new Error(\"sha256 checksum of body does not match\");\n      }\n    }\n    return WebhookEvent.fromJson(JSON.parse(body), { ignoreUnknownFields: true });\n  }\n}\n\n//# sourceMappingURL=WebhookReceiver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvV2ViaG9va1JlY2VpdmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRTtBQUNyQjtBQUNMO0FBQzVDO0FBQ0EsMkJBQTJCLDJEQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwREFBYTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix5REFBTTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCwyQkFBMkI7QUFDaEY7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92b2ljZS1hc3Npc3RhbnQyLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xpdmVraXQtc2VydmVyLXNka0AyLjEwLjEvbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L1dlYmhvb2tSZWNlaXZlci5qcz84MDgzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdlYmhvb2tFdmVudCBhcyBQcm90b1dlYmhvb2tFdmVudCB9IGZyb20gXCJAbGl2ZWtpdC9wcm90b2NvbFwiO1xuaW1wb3J0IHsgVG9rZW5WZXJpZmllciB9IGZyb20gXCIuL0FjY2Vzc1Rva2VuLmpzXCI7XG5pbXBvcnQgeyBkaWdlc3QgfSBmcm9tIFwiLi9jcnlwdG8vZGlnZXN0LmpzXCI7XG5jb25zdCBhdXRob3JpemVIZWFkZXIgPSBcIkF1dGhvcml6ZVwiO1xuY2xhc3MgV2ViaG9va0V2ZW50IGV4dGVuZHMgUHJvdG9XZWJob29rRXZlbnQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgIHRoaXMuZXZlbnQgPSBcIlwiO1xuICB9XG4gIHN0YXRpYyBmcm9tQmluYXJ5KGJ5dGVzLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBXZWJob29rRXZlbnQoKS5mcm9tQmluYXJ5KGJ5dGVzLCBvcHRpb25zKTtcbiAgfVxuICBzdGF0aWMgZnJvbUpzb24oanNvblZhbHVlLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBXZWJob29rRXZlbnQoKS5mcm9tSnNvbihqc29uVmFsdWUsIG9wdGlvbnMpO1xuICB9XG4gIHN0YXRpYyBmcm9tSnNvblN0cmluZyhqc29uU3RyaW5nLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBXZWJob29rRXZlbnQoKS5mcm9tSnNvblN0cmluZyhqc29uU3RyaW5nLCBvcHRpb25zKTtcbiAgfVxufVxuY2xhc3MgV2ViaG9va1JlY2VpdmVyIHtcbiAgY29uc3RydWN0b3IoYXBpS2V5LCBhcGlTZWNyZXQpIHtcbiAgICB0aGlzLnZlcmlmaWVyID0gbmV3IFRva2VuVmVyaWZpZXIoYXBpS2V5LCBhcGlTZWNyZXQpO1xuICB9XG4gIC8qKlxuICAgKiBAcGFyYW0gYm9keSAtIHN0cmluZyBvZiB0aGUgcG9zdGVkIGJvZHlcbiAgICogQHBhcmFtIGF1dGhIZWFkZXIgLSBgQXV0aG9yaXphdGlvbmAgaGVhZGVyIGZyb20gdGhlIHJlcXVlc3RcbiAgICogQHBhcmFtIHNraXBBdXRoIC0gdHJ1ZSB0byBza2lwIGF1dGggdmFsaWRhdGlvblxuICAgKiBAcmV0dXJuc1xuICAgKi9cbiAgYXN5bmMgcmVjZWl2ZShib2R5LCBhdXRoSGVhZGVyLCBza2lwQXV0aCA9IGZhbHNlKSB7XG4gICAgaWYgKCFza2lwQXV0aCkge1xuICAgICAgaWYgKCFhdXRoSGVhZGVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImF1dGhvcml6YXRpb24gaGVhZGVyIGlzIGVtcHR5XCIpO1xuICAgICAgfVxuICAgICAgY29uc3QgY2xhaW1zID0gYXdhaXQgdGhpcy52ZXJpZmllci52ZXJpZnkoYXV0aEhlYWRlcik7XG4gICAgICBjb25zdCBoYXNoID0gYXdhaXQgZGlnZXN0KGJvZHkpO1xuICAgICAgY29uc3QgaGFzaERlY29kZWQgPSBidG9hKFxuICAgICAgICBBcnJheS5mcm9tKG5ldyBVaW50OEFycmF5KGhhc2gpKS5tYXAoKHYpID0+IFN0cmluZy5mcm9tQ2hhckNvZGUodikpLmpvaW4oXCJcIilcbiAgICAgICk7XG4gICAgICBpZiAoY2xhaW1zLnNoYTI1NiAhPT0gaGFzaERlY29kZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwic2hhMjU2IGNoZWNrc3VtIG9mIGJvZHkgZG9lcyBub3QgbWF0Y2hcIik7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBXZWJob29rRXZlbnQuZnJvbUpzb24oSlNPTi5wYXJzZShib2R5KSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICB9XG59XG5leHBvcnQge1xuICBXZWJob29rRXZlbnQsXG4gIFdlYmhvb2tSZWNlaXZlcixcbiAgYXV0aG9yaXplSGVhZGVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2ViaG9va1JlY2VpdmVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/WebhookReceiver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/crypto/digest.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/crypto/digest.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digest: () => (/* binding */ digest)\n/* harmony export */ });\nasync function digest(data) {\n  var _a;\n  if ((_a = globalThis.crypto) == null ? void 0 : _a.subtle) {\n    const encoder = new TextEncoder();\n    return crypto.subtle.digest(\"SHA-256\", encoder.encode(data));\n  } else {\n    const nodeCrypto = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:crypto */ \"node:crypto\", 19));\n    return nodeCrypto.createHash(\"sha256\").update(data).digest();\n  }\n}\n\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvY3J5cHRvL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSiw2QkFBNkIsNEhBQXFCO0FBQ2xEO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92b2ljZS1hc3Npc3RhbnQyLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xpdmVraXQtc2VydmVyLXNka0AyLjEwLjEvbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L2NyeXB0by9kaWdlc3QuanM/YTAwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyBmdW5jdGlvbiBkaWdlc3QoZGF0YSkge1xuICB2YXIgX2E7XG4gIGlmICgoX2EgPSBnbG9iYWxUaGlzLmNyeXB0bykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnN1YnRsZSkge1xuICAgIGNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgICByZXR1cm4gY3J5cHRvLnN1YnRsZS5kaWdlc3QoXCJTSEEtMjU2XCIsIGVuY29kZXIuZW5jb2RlKGRhdGEpKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBub2RlQ3J5cHRvID0gYXdhaXQgaW1wb3J0KFwibm9kZTpjcnlwdG9cIik7XG4gICAgcmV0dXJuIG5vZGVDcnlwdG8uY3JlYXRlSGFzaChcInNoYTI1NlwiKS51cGRhdGUoZGF0YSkuZGlnZXN0KCk7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIGRpZ2VzdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpZ2VzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/crypto/digest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/crypto/uuid.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/crypto/uuid.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomBytes: () => (/* binding */ getRandomBytes)\n/* harmony export */ });\nasync function getRandomBytes(size = 16) {\n  if (globalThis.crypto) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  } else {\n    const nodeCrypto = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:crypto */ \"node:crypto\", 19));\n    return nodeCrypto.getRandomValues(new Uint8Array(size));\n  }\n}\n\n//# sourceMappingURL=uuid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvY3J5cHRvL3V1aWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSiw2QkFBNkIsNEhBQXFCO0FBQ2xEO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92b2ljZS1hc3Npc3RhbnQyLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xpdmVraXQtc2VydmVyLXNka0AyLjEwLjEvbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L2NyeXB0by91dWlkLmpzP2FjZWQiXSwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgZnVuY3Rpb24gZ2V0UmFuZG9tQnl0ZXMoc2l6ZSA9IDE2KSB7XG4gIGlmIChnbG9iYWxUaGlzLmNyeXB0bykge1xuICAgIHJldHVybiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KHNpemUpKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBub2RlQ3J5cHRvID0gYXdhaXQgaW1wb3J0KFwibm9kZTpjcnlwdG9cIik7XG4gICAgcmV0dXJuIG5vZGVDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KHNpemUpKTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgZ2V0UmFuZG9tQnl0ZXNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dWlkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/crypto/uuid.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/grants.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/grants.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   claimsToJwtPayload: () => (/* binding */ claimsToJwtPayload),\n/* harmony export */   trackSourceToString: () => (/* binding */ trackSourceToString)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.33.0/node_modules/@livekit/protocol/dist/index.mjs\");\n\nfunction trackSourceToString(source) {\n  switch (source) {\n    case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.CAMERA:\n      return \"camera\";\n    case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.MICROPHONE:\n      return \"microphone\";\n    case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.SCREEN_SHARE:\n      return \"screen_share\";\n    case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.SCREEN_SHARE_AUDIO:\n      return \"screen_share_audio\";\n    default:\n      throw new TypeError(`Cannot convert TrackSource ${source} to string`);\n  }\n}\nfunction claimsToJwtPayload(grant) {\n  var _a;\n  const claim = { ...grant };\n  if (Array.isArray((_a = claim.video) == null ? void 0 : _a.canPublishSources)) {\n    claim.video.canPublishSources = claim.video.canPublishSources.map(trackSourceToString);\n  }\n  return claim;\n}\n\n//# sourceMappingURL=grants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvZ3JhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRDtBQUNoRDtBQUNBO0FBQ0EsU0FBUywwREFBVztBQUNwQjtBQUNBLFNBQVMsMERBQVc7QUFDcEI7QUFDQSxTQUFTLDBEQUFXO0FBQ3BCO0FBQ0EsU0FBUywwREFBVztBQUNwQjtBQUNBO0FBQ0Esd0RBQXdELFFBQVE7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92b2ljZS1hc3Npc3RhbnQyLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xpdmVraXQtc2VydmVyLXNka0AyLjEwLjEvbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L2dyYW50cy5qcz8wM2YxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYWNrU291cmNlIH0gZnJvbSBcIkBsaXZla2l0L3Byb3RvY29sXCI7XG5mdW5jdGlvbiB0cmFja1NvdXJjZVRvU3RyaW5nKHNvdXJjZSkge1xuICBzd2l0Y2ggKHNvdXJjZSkge1xuICAgIGNhc2UgVHJhY2tTb3VyY2UuQ0FNRVJBOlxuICAgICAgcmV0dXJuIFwiY2FtZXJhXCI7XG4gICAgY2FzZSBUcmFja1NvdXJjZS5NSUNST1BIT05FOlxuICAgICAgcmV0dXJuIFwibWljcm9waG9uZVwiO1xuICAgIGNhc2UgVHJhY2tTb3VyY2UuU0NSRUVOX1NIQVJFOlxuICAgICAgcmV0dXJuIFwic2NyZWVuX3NoYXJlXCI7XG4gICAgY2FzZSBUcmFja1NvdXJjZS5TQ1JFRU5fU0hBUkVfQVVESU86XG4gICAgICByZXR1cm4gXCJzY3JlZW5fc2hhcmVfYXVkaW9cIjtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgQ2Fubm90IGNvbnZlcnQgVHJhY2tTb3VyY2UgJHtzb3VyY2V9IHRvIHN0cmluZ2ApO1xuICB9XG59XG5mdW5jdGlvbiBjbGFpbXNUb0p3dFBheWxvYWQoZ3JhbnQpIHtcbiAgdmFyIF9hO1xuICBjb25zdCBjbGFpbSA9IHsgLi4uZ3JhbnQgfTtcbiAgaWYgKEFycmF5LmlzQXJyYXkoKF9hID0gY2xhaW0udmlkZW8pID09IG51bGwgPyB2b2lkIDAgOiBfYS5jYW5QdWJsaXNoU291cmNlcykpIHtcbiAgICBjbGFpbS52aWRlby5jYW5QdWJsaXNoU291cmNlcyA9IGNsYWltLnZpZGVvLmNhblB1Ymxpc2hTb3VyY2VzLm1hcCh0cmFja1NvdXJjZVRvU3RyaW5nKTtcbiAgfVxuICByZXR1cm4gY2xhaW07XG59XG5leHBvcnQge1xuICBjbGFpbXNUb0p3dFBheWxvYWQsXG4gIHRyYWNrU291cmNlVG9TdHJpbmdcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncmFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/grants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/index.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* reexport safe */ _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.AccessToken),\n/* harmony export */   AgentDispatchClient: () => (/* reexport safe */ _AgentDispatchClient_js__WEBPACK_IMPORTED_MODULE_2__.AgentDispatchClient),\n/* harmony export */   AliOSSUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AliOSSUpload),\n/* harmony export */   AudioCodec: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AudioCodec),\n/* harmony export */   AutoParticipantEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AutoParticipantEgress),\n/* harmony export */   AutoTrackEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AutoTrackEgress),\n/* harmony export */   AzureBlobUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AzureBlobUpload),\n/* harmony export */   DataPacket_Kind: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DataPacket_Kind),\n/* harmony export */   DirectFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DirectFileOutput),\n/* harmony export */   EgressClient: () => (/* reexport safe */ _EgressClient_js__WEBPACK_IMPORTED_MODULE_3__.EgressClient),\n/* harmony export */   EgressInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo),\n/* harmony export */   EgressStatus: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressStatus),\n/* harmony export */   EncodedFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodedFileOutput),\n/* harmony export */   EncodedFileType: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodedFileType),\n/* harmony export */   EncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodingOptions),\n/* harmony export */   EncodingOptionsPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodingOptionsPreset),\n/* harmony export */   GCPUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.GCPUpload),\n/* harmony export */   ImageCodec: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ImageCodec),\n/* harmony export */   ImageFileSuffix: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ImageFileSuffix),\n/* harmony export */   ImageOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ImageOutput),\n/* harmony export */   IngressAudioEncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioEncodingOptions),\n/* harmony export */   IngressAudioEncodingPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioEncodingPreset),\n/* harmony export */   IngressAudioOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioOptions),\n/* harmony export */   IngressClient: () => (/* reexport safe */ _IngressClient_js__WEBPACK_IMPORTED_MODULE_5__.IngressClient),\n/* harmony export */   IngressInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo),\n/* harmony export */   IngressInput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInput),\n/* harmony export */   IngressState: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressState),\n/* harmony export */   IngressVideoEncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoEncodingOptions),\n/* harmony export */   IngressVideoEncodingPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoEncodingPreset),\n/* harmony export */   IngressVideoOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoOptions),\n/* harmony export */   ParticipantEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantEgressRequest),\n/* harmony export */   ParticipantInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo),\n/* harmony export */   ParticipantInfo_State: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo_State),\n/* harmony export */   ParticipantPermission: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantPermission),\n/* harmony export */   Room: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room),\n/* harmony export */   RoomCompositeEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomCompositeEgressRequest),\n/* harmony export */   RoomEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomEgress),\n/* harmony export */   RoomServiceClient: () => (/* reexport safe */ _RoomServiceClient_js__WEBPACK_IMPORTED_MODULE_6__.RoomServiceClient),\n/* harmony export */   S3Upload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.S3Upload),\n/* harmony export */   SIPDispatchRuleInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo),\n/* harmony export */   SIPParticipantInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPParticipantInfo),\n/* harmony export */   SIPTrunkInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo),\n/* harmony export */   SegmentedFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SegmentedFileOutput),\n/* harmony export */   SegmentedFileProtocol: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SegmentedFileProtocol),\n/* harmony export */   SipClient: () => (/* reexport safe */ _SipClient_js__WEBPACK_IMPORTED_MODULE_7__.SipClient),\n/* harmony export */   StreamOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StreamOutput),\n/* harmony export */   StreamProtocol: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StreamProtocol),\n/* harmony export */   TokenVerifier: () => (/* reexport safe */ _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.TokenVerifier),\n/* harmony export */   TrackCompositeEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackCompositeEgressRequest),\n/* harmony export */   TrackEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackEgressRequest),\n/* harmony export */   TrackInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackInfo),\n/* harmony export */   TrackSource: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource),\n/* harmony export */   TrackType: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackType),\n/* harmony export */   VideoCodec: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.VideoCodec),\n/* harmony export */   WebEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebEgressRequest),\n/* harmony export */   WebhookEvent: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_8__.WebhookEvent),\n/* harmony export */   WebhookReceiver: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_8__.WebhookReceiver),\n/* harmony export */   authorizeHeader: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_8__.authorizeHeader),\n/* harmony export */   claimsToJwtPayload: () => (/* reexport safe */ _grants_js__WEBPACK_IMPORTED_MODULE_4__.claimsToJwtPayload),\n/* harmony export */   trackSourceToString: () => (/* reexport safe */ _grants_js__WEBPACK_IMPORTED_MODULE_4__.trackSourceToString)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.33.0/node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/AccessToken.js\");\n/* harmony import */ var _AgentDispatchClient_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AgentDispatchClient.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/AgentDispatchClient.js\");\n/* harmony import */ var _EgressClient_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EgressClient.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/EgressClient.js\");\n/* harmony import */ var _grants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./grants.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/grants.js\");\n/* harmony import */ var _IngressClient_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./IngressClient.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/IngressClient.js\");\n/* harmony import */ var _RoomServiceClient_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RoomServiceClient.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/RoomServiceClient.js\");\n/* harmony import */ var _SipClient_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SipClient.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/SipClient.js\");\n/* harmony import */ var _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./WebhookReceiver.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/WebhookReceiver.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuMTAuMS9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUQyQjtBQUNNO0FBQ1E7QUFDUDtBQUNOO0FBQ087QUFDSTtBQUNSO0FBQ007QUFrRG5DO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92b2ljZS1hc3Npc3RhbnQyLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xpdmVraXQtc2VydmVyLXNka0AyLjEwLjEvbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L2luZGV4LmpzPzEwY2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWxpT1NTVXBsb2FkLFxuICBBdWRpb0NvZGVjLFxuICBBdXRvUGFydGljaXBhbnRFZ3Jlc3MsXG4gIEF1dG9UcmFja0VncmVzcyxcbiAgQXp1cmVCbG9iVXBsb2FkLFxuICBEYXRhUGFja2V0X0tpbmQsXG4gIERpcmVjdEZpbGVPdXRwdXQsXG4gIEVncmVzc0luZm8sXG4gIEVncmVzc1N0YXR1cyxcbiAgRW5jb2RlZEZpbGVPdXRwdXQsXG4gIEVuY29kZWRGaWxlVHlwZSxcbiAgRW5jb2RpbmdPcHRpb25zLFxuICBFbmNvZGluZ09wdGlvbnNQcmVzZXQsXG4gIEdDUFVwbG9hZCxcbiAgSW1hZ2VDb2RlYyxcbiAgSW1hZ2VGaWxlU3VmZml4LFxuICBJbWFnZU91dHB1dCxcbiAgSW5ncmVzc0F1ZGlvRW5jb2RpbmdPcHRpb25zLFxuICBJbmdyZXNzQXVkaW9FbmNvZGluZ1ByZXNldCxcbiAgSW5ncmVzc0F1ZGlvT3B0aW9ucyxcbiAgSW5ncmVzc0luZm8sXG4gIEluZ3Jlc3NJbnB1dCxcbiAgSW5ncmVzc1N0YXRlLFxuICBJbmdyZXNzVmlkZW9FbmNvZGluZ09wdGlvbnMsXG4gIEluZ3Jlc3NWaWRlb0VuY29kaW5nUHJlc2V0LFxuICBJbmdyZXNzVmlkZW9PcHRpb25zLFxuICBQYXJ0aWNpcGFudEVncmVzc1JlcXVlc3QsXG4gIFBhcnRpY2lwYW50SW5mbyxcbiAgUGFydGljaXBhbnRJbmZvX1N0YXRlLFxuICBQYXJ0aWNpcGFudFBlcm1pc3Npb24sXG4gIFJvb20sXG4gIFJvb21Db21wb3NpdGVFZ3Jlc3NSZXF1ZXN0LFxuICBSb29tRWdyZXNzLFxuICBTM1VwbG9hZCxcbiAgU0lQRGlzcGF0Y2hSdWxlSW5mbyxcbiAgU0lQUGFydGljaXBhbnRJbmZvLFxuICBTSVBUcnVua0luZm8sXG4gIFNlZ21lbnRlZEZpbGVPdXRwdXQsXG4gIFNlZ21lbnRlZEZpbGVQcm90b2NvbCxcbiAgU3RyZWFtT3V0cHV0LFxuICBTdHJlYW1Qcm90b2NvbCxcbiAgVHJhY2tDb21wb3NpdGVFZ3Jlc3NSZXF1ZXN0LFxuICBUcmFja0VncmVzc1JlcXVlc3QsXG4gIFRyYWNrSW5mbyxcbiAgVHJhY2tTb3VyY2UsXG4gIFRyYWNrVHlwZSxcbiAgV2ViRWdyZXNzUmVxdWVzdCxcbiAgVmlkZW9Db2RlY1xufSBmcm9tIFwiQGxpdmVraXQvcHJvdG9jb2xcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0FjY2Vzc1Rva2VuLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9BZ2VudERpc3BhdGNoQ2xpZW50LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9FZ3Jlc3NDbGllbnQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dyYW50cy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vSW5ncmVzc0NsaWVudC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vUm9vbVNlcnZpY2VDbGllbnQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1NpcENsaWVudC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vV2ViaG9va1JlY2VpdmVyLmpzXCI7XG5leHBvcnQge1xuICBBbGlPU1NVcGxvYWQsXG4gIEF1ZGlvQ29kZWMsXG4gIEF1dG9QYXJ0aWNpcGFudEVncmVzcyxcbiAgQXV0b1RyYWNrRWdyZXNzLFxuICBBenVyZUJsb2JVcGxvYWQsXG4gIERhdGFQYWNrZXRfS2luZCxcbiAgRGlyZWN0RmlsZU91dHB1dCxcbiAgRWdyZXNzSW5mbyxcbiAgRWdyZXNzU3RhdHVzLFxuICBFbmNvZGVkRmlsZU91dHB1dCxcbiAgRW5jb2RlZEZpbGVUeXBlLFxuICBFbmNvZGluZ09wdGlvbnMsXG4gIEVuY29kaW5nT3B0aW9uc1ByZXNldCxcbiAgR0NQVXBsb2FkLFxuICBJbWFnZUNvZGVjLFxuICBJbWFnZUZpbGVTdWZmaXgsXG4gIEltYWdlT3V0cHV0LFxuICBJbmdyZXNzQXVkaW9FbmNvZGluZ09wdGlvbnMsXG4gIEluZ3Jlc3NBdWRpb0VuY29kaW5nUHJlc2V0LFxuICBJbmdyZXNzQXVkaW9PcHRpb25zLFxuICBJbmdyZXNzSW5mbyxcbiAgSW5ncmVzc0lucHV0LFxuICBJbmdyZXNzU3RhdGUsXG4gIEluZ3Jlc3NWaWRlb0VuY29kaW5nT3B0aW9ucyxcbiAgSW5ncmVzc1ZpZGVvRW5jb2RpbmdQcmVzZXQsXG4gIEluZ3Jlc3NWaWRlb09wdGlvbnMsXG4gIFBhcnRpY2lwYW50RWdyZXNzUmVxdWVzdCxcbiAgUGFydGljaXBhbnRJbmZvLFxuICBQYXJ0aWNpcGFudEluZm9fU3RhdGUsXG4gIFBhcnRpY2lwYW50UGVybWlzc2lvbixcbiAgUm9vbSxcbiAgUm9vbUNvbXBvc2l0ZUVncmVzc1JlcXVlc3QsXG4gIFJvb21FZ3Jlc3MsXG4gIFMzVXBsb2FkLFxuICBTSVBEaXNwYXRjaFJ1bGVJbmZvLFxuICBTSVBQYXJ0aWNpcGFudEluZm8sXG4gIFNJUFRydW5rSW5mbyxcbiAgU2VnbWVudGVkRmlsZU91dHB1dCxcbiAgU2VnbWVudGVkRmlsZVByb3RvY29sLFxuICBTdHJlYW1PdXRwdXQsXG4gIFN0cmVhbVByb3RvY29sLFxuICBUcmFja0NvbXBvc2l0ZUVncmVzc1JlcXVlc3QsXG4gIFRyYWNrRWdyZXNzUmVxdWVzdCxcbiAgVHJhY2tJbmZvLFxuICBUcmFja1NvdXJjZSxcbiAgVHJhY2tUeXBlLFxuICBWaWRlb0NvZGVjLFxuICBXZWJFZ3Jlc3NSZXF1ZXN0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.10.1/node_modules/livekit-server-sdk/dist/index.js\n");

/***/ })

};
;